                 -1   $MODLP51
0000              1   ;--------------------------------------------------------
0000              2   ; Special Function Registers
0000              3   ;--------------------------------------------------------
0000              4   ACC            DATA 0xe0
0000              5   B              DATA 0xf0
0000              6   PSW            DATA 0xd0
0000              7   SP             DATA 0x81
0000              8   SPX            DATA 0xef
0000              9   DPL            DATA 0x82
0000             10   DPH            DATA 0x83
0000             11   DPLB           DATA 0xd4
0000             12   DPHB           DATA 0xd5
0000             13   PAGE           DATA 0xf6
0000             14   AX             DATA 0xe1
0000             15   BX             DATA 0xf7
0000             16   DSPR           DATA 0xe2
0000             17   FIRD           DATA 0xe3
0000             18   MACL           DATA 0xe4
0000             19   MACH           DATA 0xe5
0000             20   PCON           DATA 0x87
0000             21   AUXR           DATA 0x8e
0000             22   AUXR1          DATA 0xa2
0000             23   DPCF           DATA 0xa1
0000             24   CKRL           DATA 0x97
0000             25   CKCKON0        DATA 0x8f
0000             26   CKCKON1        DATA 0xaf
0000             27   CKSEL          DATA 0x85
0000             28   CLKREG         DATA 0xae
0000             29   OSCCON         DATA 0x85
0000             30   IE             DATA 0xa8
0000             31   IEN0           DATA 0xa8
0000             32   IEN1           DATA 0xb1
0000             33   IPH0           DATA 0xb7
0000             34   IP             DATA 0xb8
0000             35   IPL0           DATA 0xb8
0000             36   IPH1           DATA 0xb3
0000             37   IPL1           DATA 0xb2
0000             38   P0             DATA 0x80
0000             39   P1             DATA 0x90
0000             40   P2             DATA 0xa0
0000             41   P3             DATA 0xb0
0000             42   P4             DATA 0xc0
0000             43   P0M0           DATA 0xe6
0000             44   P0M1           DATA 0xe7
0000             45   P1M0           DATA 0xd6
0000             46   P1M1           DATA 0xd7
0000             47   P2M0           DATA 0xce
0000             48   P2M1           DATA 0xcf
0000             49   P3M0           DATA 0xc6
0000             50   P3M1           DATA 0xc7
0000             51   P4M0           DATA 0xbe
0000             52   P4M1           DATA 0xbf
0000             53   SCON           DATA 0x98
0000             54   SBUF           DATA 0x99
0000             55   SADEN          DATA 0xb9
0000             56   SADDR          DATA 0xa9
0000             57   BDRCON         DATA 0x9b
0000             58   BRL            DATA 0x9a
0000             59   TCON           DATA 0x88
0000             60   TMOD           DATA 0x89
0000             61   TCONB          DATA 0x91
0000             62   TL0            DATA 0x8a
0000             63   TH0            DATA 0x8c
0000             64   TL1            DATA 0x8b
0000             65   TH1            DATA 0x8d
0000             66   RL0            DATA 0xf2
0000             67   RL1            DATA 0xf3
0000             68   RH0            DATA 0xf4
0000             69   RH1            DATA 0xf5
0000             70   WDTRST         DATA 0xa6
0000             71   WDTPRG         DATA 0xa7
0000             72   T2CON          DATA 0xc8
0000             73   T2MOD          DATA 0xc9
0000             74   RCAP2H         DATA 0xcb
0000             75   RCAP2L         DATA 0xca
0000             76   TH2            DATA 0xcd
0000             77   TL2            DATA 0xcc
0000             78   SPCON          DATA 0xc3
0000             79   SPSTA          DATA 0xc4
0000             80   SPDAT          DATA 0xc5
0000             81   SSCON          DATA 0x93
0000             82   SSCS           DATA 0x94
0000             83   SSDAT          DATA 0x95
0000             84   SSADR          DATA 0x96
0000             85   KBLS           DATA 0x9c
0000             86   KBE            DATA 0x9d
0000             87   KBF            DATA 0x9e
0000             88   KBMOD          DATA 0x9f
0000             89   BMSEL          DATA 0x92
0000             90   FCON           DATA 0xd2
0000             91   EECON          DATA 0xd2
0000             92   ACSRA          DATA 0xa3
0000             93   ACSRB          DATA 0xab
0000             94   AREF           DATA 0xbd
0000             95   DADC           DATA 0xa4
0000             96   DADI           DATA 0xa5
0000             97   DADL           DATA 0xac
0000             98   DADH           DATA 0xad
0000             99   CCON           DATA 0xd8
0000            100   CMOD           DATA 0xd9
0000            101   CL             DATA 0xe9
0000            102   CH             DATA 0xf9
0000            103   CCAPM0         DATA 0xda
0000            104   CCAPM1         DATA 0xdb
0000            105   CCAPM2         DATA 0xdc
0000            106   CCAPM3         DATA 0xdd
0000            107   CCAPM4         DATA 0xde
0000            108   CCAP0H         DATA 0xfa
0000            109   CCAP1H         DATA 0xfb
0000            110   CCAP2H         DATA 0xfc
0000            111   CCAP3H         DATA 0xfd
0000            112   CCAP4H         DATA 0xfe
0000            113   CCAP0L         DATA 0xea
0000            114   CCAP1L         DATA 0xeb
0000            115   CCAP2L         DATA 0xec
0000            116   CCAP3L         DATA 0xed
0000            117   CCAP4L         DATA 0xee
0000            118   ;--------------------------------------------------------
0000            119   ; special function bits
0000            120   ;--------------------------------------------------------
0000            121   P              BIT 0xd0
0000            122   F1             BIT 0xd1
0000            123   OV             BIT 0xd2
0000            124   RS0            BIT 0xd3
0000            125   RS1            BIT 0xd4
0000            126   F0             BIT 0xd5
0000            127   AC             BIT 0xd6
0000            128   CY             BIT 0xd7
0000            129   EX0            BIT 0xa8
0000            130   ET0            BIT 0xa9
0000            131   EX1            BIT 0xaa
0000            132   ET1            BIT 0xab
0000            133   ES             BIT 0xac
0000            134   ET2            BIT 0xad
0000            135   EC             BIT 0xae
0000            136   EA             BIT 0xaf
0000            137   PX0            BIT 0xb8
0000            138   PT0            BIT 0xb9
0000            139   PX1            BIT 0xba
0000            140   PT1            BIT 0xbb
0000            141   PS             BIT 0xbc
0000            142   PT2            BIT 0xbd
0000            143   IP0D           BIT 0xbf
0000            144   PPCL           BIT 0xbe
0000            145   PT2L           BIT 0xbd
0000            146   PLS            BIT 0xbc
0000            147   PT1L           BIT 0xbb
0000            148   PX1L           BIT 0xba
0000            149   PT0L           BIT 0xb9
0000            150   PX0L           BIT 0xb8
0000            151   RXD            BIT 0xb0
0000            152   TXD            BIT 0xb1
0000            153   INT0           BIT 0xb2
0000            154   INT1           BIT 0xb3
0000            155   T0             BIT 0xb4
0000            156   T1             BIT 0xb5
0000            157   WR             BIT 0xb6
0000            158   RD             BIT 0xb7
0000            159   RI             BIT 0x98
0000            160   TI             BIT 0x99
0000            161   RB8            BIT 0x9a
0000            162   TB8            BIT 0x9b
0000            163   REN            BIT 0x9c
0000            164   SM2            BIT 0x9d
0000            165   SM1            BIT 0x9e
0000            166   SM0            BIT 0x9f
0000            167   IT0            BIT 0x88
0000            168   IE0            BIT 0x89
0000            169   IT1            BIT 0x8a
0000            170   IE1            BIT 0x8b
0000            171   TR0            BIT 0x8c
0000            172   TF0            BIT 0x8d
0000            173   TR1            BIT 0x8e
0000            174   TF1            BIT 0x8f
0000            175   CP_RL2         BIT 0xc8
0000            176   C_T2           BIT 0xc9
0000            177   TR2            BIT 0xca
0000            178   EXEN2          BIT 0xcb
0000            179   TCLK           BIT 0xcc
0000            180   RCLK           BIT 0xcd
0000            181   EXF2           BIT 0xce
0000            182   TF2            BIT 0xcf
0000            183   CF             BIT 0xdf
0000            184   CR             BIT 0xde
0000            185   CCF4           BIT 0xdc
0000            186   CCF3           BIT 0xdb
0000            187   CCF2           BIT 0xda
0000            188   CCF1           BIT 0xd9
0000            189   CCF0           BIT 0xd8
0000              2   
0000              3   ; There is a couple of typos in MODLP51 in the definition of the timer 0/1 reload
0000              4   ; special function registers (SFRs), so:
0000              5   
0000              6   TIMER0_RELOAD_L DATA 0xf2
0000              7   TIMER1_RELOAD_L DATA 0xf3
0000              8   TIMER0_RELOAD_H DATA 0xf4
0000              9   TIMER1_RELOAD_H DATA 0xf5
0000             10   
0000             11   CLK           EQU 22118400 ; Microcontroller system crystal frequency in Hz
0000             12   TIMER0_RATE   EQU 4096     ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0000             13   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0000             14   TIMER2_RATE   EQU 1000     ; 1000Hz, for a timer tick of 1ms
0000             15   TIMER2_RELOAD EQU ((65536-(CLK/TIMER2_RATE)))
0000             16   MAX_TEMP           EQU 250
0000             17   TIMEOUT_TIME  EQU 60
0000             18   BAUD equ 115200
0000             19   BRG_VAL equ (0x100-(CLK/(16*BAUD)))
0000             20   
0000             21   
0000             22   org 0x0000
0000 020212      23      ljmp MainProgram
0003             24   
0003             25   ; These ’EQU’ must match the wiring between the microcontroller and ADC
0003             26   SOUND_OUT   EQU P3.7
0003             27   CE_ADC      EQU P2.4
0003             28   MY_MOSI     EQU P2.5
0003             29   MY_MISO     EQU P2.6
0003             30   MY_SCLK     EQU P2.7
0003             31   UP_BUTTON        EQU P0.0
0003             32   DOWN_BUTTON EQU P0.1
0003             33   SELECT_BUTTON EQU P0.2
0003             34   NEXT_BUTTON EQU P0.3
0003             35   BACK_BUTTON EQU p0.4
0003             36   MASTER_START_STOP equ p0.5
0003             37   
0003             38   
0030             39   DSEG at 0x30
0030             40   Count1ms:      ds 2 ; Used to determine when half second has passed
0032             41   Result: ds 2
0034             42   x:      ds 4
0038             43   y:      ds 4
003C             44   bcd:    ds 5
0041             45   soaktime: ds 2
0043             46   soaktemp: ds 2
0045             47   reflowtime: ds 2
0047             48   reflowtemp: ds 2
0049             49   soaktemp3digit: ds 2
004B             50   
004B             51   
0000             52   BSEG
0000             53   mf: dbit 1
0001             54   
0003             55   CSEG
0003             56   LCD_RS equ P1.1
0003             57   LCD_RW equ P1.2
0003             58   LCD_E  equ P1.3
0003             59   LCD_D4 equ P3.2
0003             60   LCD_D5 equ P3.3
0003             61   LCD_D6 equ P3.4
0003             62   LCD_D7 equ P3.5
0003             63   
                 65   	$LIST
00B1             67   
00B1             68   ;$NOLIST
00B1             69   ;$include(menu_code.inc) 
00B1             70   ;$LIST
00B1             71   
00B1             72   ;                     1234567890123456    <- This helps determine the location of the counter
00B1 57656C63    73   Welcome:                   db 'Welcome!        ', 0
     6F6D6521
     20202020
     20202020
     00
00C2 53656C65    74   Choose_option:     db 'Select option   ', 0
     6374206F
     7074696F
     6E202020
     00
00D3 50726573    75   Preset_menu_msg:  db 'Preset Profile  ', 0
     65742050
     726F6669
     6C652020
     00
00E4 43757374    76   Custom_menu_msg:  db 'Custom Profile  ', 0
     6F6D2050
     726F6669
     6C652020
     00
00F5 536F616B    77   Soak_temp:                 db 'Soak Temp       ', 0
     2054656D
     70202020
     20202020
     00
0106 536F616B    78   Soak_time:                 db 'Soak Time       ', 0
     2054696D
     65202020
     20202020
     00
0117 5265666C    79   Reflow_time:       db 'Reflow Time     ', 0
     6F772054
     696D6520
     20202020
     00
0128 5265666C    80   Reflow_temp:       db 'Reflow Temp     ', 0
     6F772054
     656D7020
     20202020
     00
0139 53414333    81   Pb_free_solder:    db 'SAC305 solder   ', 0
     30352073
     6F6C6465
     72202020
     00
014A 50622D73    82   Pb_solder:                 db 'Pb-solder paste ', 0
     6F6C6465
     72207061
     73746520
     00
015B 53686868    83   Pizza_msg0:        db 'Shhh! No pizza  ', 0
     21204E6F
     2070697A
     7A612020
     00
016C 616C6C6F    84   Pizza_msg1:        db 'allowed in here.', 0
     77656420
     696E2068
     6572652E
     00
017D 70726F66    85   Profile_loaded:   db 'profile loaded  ', 0
     696C6520
     6C6F6164
     65642020
     00
018E 53797374    86   Is_ready:                  db 'System Ready    ', 0
     656D2052
     65616479
     20202020
     00
019F 50726573    87   Press_start:       db 'Press Start     ', 0
     73205374
     61727420
     20202020
     00
01B0 78782020    88   Set_Value:                 db 'xx              ', 0
     20202020
     20202020
     20202020
     00
01C1 20202020    89   Clear_Row:                 db '                ', 0
     20202020
     20202020
     20202020
     00
01D2 41542050    90   PRESETMENUMSG:     db 'AT PRESET MENU  ', 0
     52455345
     54204D45
     4E552020
     00
01E3 41542043    91   CUSTOMMENUMSG:     db 'AT CUSTOM MENU  ', 0
     5553544F
     4D204D45
     4E552020
     00
01F4 41726520    92   Are_you_sure:      db 'Are you sure?   ', 0
     796F7520
     73757265
     3F202020
     00
0205             93   
0205             94   WaitHalfSec:
0205 7A2D        95       mov R2, #45
0207 79FA        96   Wait3: mov R1, #250
0209 78A6        97   Wait2: mov R0, #166
020B D8FE        98   Wait1: djnz R0, Wait1 ; 3 cycles->3*45.21123ns*166=22.51519us
020D D9FA        99       djnz R1, Wait2 ; 22.51519us*250=5.629ms
020F DAF6       100       djnz R2, Wait3 ; 5.629ms*89=0.5s (approximately)
0211 22         101       ret
0212            102   
0212            103   ;-----------------------------
0212            104   ;Button Pressed macro 
0212            105   ;if button (input %0) is pressed, go to specified location (input %1), if not, go to next instruction
0212            106   ;-----------------------------
0212            107   
                108   button_jmp mac	
                109   jb %0, endhere_%M
                110   Wait_Milli_Seconds(#50)
                111   jb %0, endhere_%M
                112   jnb %0, $
                113   ljmp %1
                114   
                115   endhere_%M: 			
                116   	endmac
0212            117            
0212            118   
0212            119   MainProgram:
0212 75817F     120            mov SP, #7FH
0215            121            ;Configure port 0/1 in bi-directional mode
0215 75E600     122            mov P0M0, #0
0218 75E700     123       mov P0M1, #0
021B 12005D     124       lcall LCD_4BIT
021E            125            ;Set all vars initally to zero
021E 754100     126            mov soaktime, #0x00
0221 754300     127            mov soaktemp, #0x00
0224 754500     128            mov reflowtime, #0x00
0227 754700     129            mov reflowtemp, #0x00
022A            130            ;display initial menu messages
022A            131            
022A            132   
022A 02022D     133            ljmp Initial_menu       
022D            134   
022D            135   
022D            136   ;----------------Main Menu Logic----------------;
022D            137   
022D            138   
022D            139   Initial_menu: 
022D C0E0       140            push acc
022F 7401       140            mov a, #1
0231 14         140            dec a
0232 120096     140            lcall ?Set_Cursor_1 ; Select column and row
0235 D0E0       140            pop acc
0237 C083       141            push dph
0239 C082       141            push dpl
023B C0E0       141            push acc
023D 9000B1     141            mov dptr, #Welcome
0240 120089     141            lcall ?Send_Constant_String
0243 D0E0       141            pop acc
0245 D082       141            pop dpl
0247 D083       141            pop dph
0249            142       
0249 C0E0       143            push acc
024B 7401       143            mov a, #1
024D 14         143            dec a
024E 120094     143            lcall ?Set_Cursor_2 ; Select column and row
0251 D0E0       143            pop acc
0253 C083       144            push dph
0255 C082       144            push dpl
0257 C0E0       144            push acc
0259 9000C2     144            mov dptr, #Choose_option
025C 120089     144            lcall ?Send_Constant_String
025F D0E0       144            pop acc
0261 D082       144            pop dpl
0263 D083       144            pop dph
0265            145      
0265            146       ;------------- any button being pressed will change the screen
0265 208212     147   jb SELECT_BUTTON, endhere_12
0268 C002       147            push AR2
026A 7A32       147            mov R2, #50
026C 12000E     147            lcall ?Wait_Milli_Seconds
026F D002       147            pop AR2
0271 208206     147   jb SELECT_BUTTON, endhere_12
0274 3082FD     147   jnb SELECT_BUTTON, $
0277 02034B     147   ljmp Choose_menu
027A            147   
027A            147   endhere_12:                      
027A 208312     148   jb NEXT_BUTTON, endhere_14
027D C002       148            push AR2
027F 7A32       148            mov R2, #50
0281 12000E     148            lcall ?Wait_Milli_Seconds
0284 D002       148            pop AR2
0286 208306     148   jb NEXT_BUTTON, endhere_14
0289 3083FD     148   jnb NEXT_BUTTON, $
028C 02034B     148   ljmp Choose_menu
028F            148   
028F            148   endhere_14:                      
028F 208012     149   jb UP_BUTTON, endhere_16
0292 C002       149            push AR2
0294 7A32       149            mov R2, #50
0296 12000E     149            lcall ?Wait_Milli_Seconds
0299 D002       149            pop AR2
029B 208006     149   jb UP_BUTTON, endhere_16
029E 3080FD     149   jnb UP_BUTTON, $
02A1 02034B     149   ljmp Choose_menu
02A4            149   
02A4            149   endhere_16:                      
02A4 208112     150   jb DOWN_BUTTON, endhere_18
02A7 C002       150            push AR2
02A9 7A32       150            mov R2, #50
02AB 12000E     150            lcall ?Wait_Milli_Seconds
02AE D002       150            pop AR2
02B0 208106     150   jb DOWN_BUTTON, endhere_18
02B3 3081FD     150   jnb DOWN_BUTTON, $
02B6 02034B     150   ljmp Choose_menu
02B9            150   
02B9            150   endhere_18:                      
02B9 02022D     151       ljmp Initial_menu
02BC            152   
02BC            153   system_ready: 
02BC C0E0       154            push acc
02BE 7401       154            mov a, #1
02C0 14         154            dec a
02C1 120096     154            lcall ?Set_Cursor_1 ; Select column and row
02C4 D0E0       154            pop acc
02C6 C083       155            push dph
02C8 C082       155            push dpl
02CA C0E0       155            push acc
02CC 90018E     155            mov dptr, #Is_ready
02CF 120089     155            lcall ?Send_Constant_String
02D2 D0E0       155            pop acc
02D4 D082       155            pop dpl
02D6 D083       155            pop dph
02D8 C0E0       156            push acc
02DA 7401       156            mov a, #1
02DC 14         156            dec a
02DD 120094     156            lcall ?Set_Cursor_2 ; Select column and row
02E0 D0E0       156            pop acc
02E2 C083       157            push dph
02E4 C082       157            push dpl
02E6 C0E0       157            push acc
02E8 90019F     157            mov dptr, #Press_start
02EB 120089     157            lcall ?Send_Constant_String
02EE D0E0       157            pop acc
02F0 D082       157            pop dpl
02F2 D083       157            pop dph
02F4            157   
02F4            158   
02F4 208412     159   jb BACK_BUTTON, endhere_24
02F7 C002       159            push AR2
02F9 7A32       159            mov R2, #50
02FB 12000E     159            lcall ?Wait_Milli_Seconds
02FE D002       159            pop AR2
0300 208406     159   jb BACK_BUTTON, endhere_24
0303 3084FD     159   jnb BACK_BUTTON, $
0306 02034B     159   ljmp Choose_menu
0309            159   
0309            159   endhere_24:                      
0309            160            
0309 208012     161   jb UP_BUTTON, endhere_26
030C C002       161            push AR2
030E 7A32       161            mov R2, #50
0310 12000E     161            lcall ?Wait_Milli_Seconds
0313 D002       161            pop AR2
0315 208006     161   jb UP_BUTTON, endhere_26
0318 3080FD     161   jnb UP_BUTTON, $
031B 02034B     161   ljmp Choose_menu
031E            161   
031E            161   endhere_26:                      
031E            162   
031E 208112     163   jb DOWN_BUTTON, endhere_28
0321 C002       163            push AR2
0323 7A32       163            mov R2, #50
0325 12000E     163            lcall ?Wait_Milli_Seconds
0328 D002       163            pop AR2
032A 208106     163   jb DOWN_BUTTON, endhere_28
032D 3081FD     163   jnb DOWN_BUTTON, $
0330 02034B     163   ljmp Choose_menu
0333            163   
0333            163   endhere_28:                      
0333 208212     164   jb SELECT_BUTTON, endhere_30
0336 C002       164            push AR2
0338 7A32       164            mov R2, #50
033A 12000E     164            lcall ?Wait_Milli_Seconds
033D D002       164            pop AR2
033F 208206     164   jb SELECT_BUTTON, endhere_30
0342 3082FD     164   jnb SELECT_BUTTON, $
0345 02034B     164   ljmp Choose_menu
0348            164   
0348            164   endhere_30:                      
0348            165   
0348 0202BC     166   ljmp system_ready
034B            167   
034B            168   
034B            169   Choose_menu: 
034B C0E0       170            push acc
034D 7401       170            mov a, #1
034F 14         170            dec a
0350 120096     170            lcall ?Set_Cursor_1 ; Select column and row
0353 D0E0       170            pop acc
0355 C083       171            push dph
0357 C082       171            push dpl
0359 C0E0       171            push acc
035B 9000D3     171            mov dptr, #Preset_menu_msg
035E 120089     171            lcall ?Send_Constant_String
0361 D0E0       171            pop acc
0363 D082       171            pop dpl
0365 D083       171            pop dph
0367 C0E0       172            push acc
0369 7401       172            mov a, #1
036B 14         172            dec a
036C 120094     172            lcall ?Set_Cursor_2 ; Select column and row
036F D0E0       172            pop acc
0371 C083       173            push dph
0373 C082       173            push dpl
0375 C0E0       173            push acc
0377 9000E4     173            mov dptr, #Custom_menu_msg
037A 120089     173            lcall ?Send_Constant_String
037D D0E0       173            pop acc
037F D082       173            pop dpl
0381 D083       173            pop dph
0383            174   
0383            175            ;!!!!need to have flashing cursor on screen on whichever option is selected !!!
0383 208012     176   jb UP_BUTTON, endhere_36
0386 C002       176            push AR2
0388 7A32       176            mov R2, #50
038A 12000E     176            lcall ?Wait_Milli_Seconds
038D D002       176            pop AR2
038F 208006     176   jb UP_BUTTON, endhere_36
0392 3080FD     176   jnb UP_BUTTON, $
0395 0203AF     176   ljmp Preset_menu_select
0398            176   
0398            176   endhere_36:                      
0398 208112     177   jb DOWN_BUTTON, endhere_38
039B C002       177            push AR2
039D 7A32       177            mov R2, #50
039F 12000E     177            lcall ?Wait_Milli_Seconds
03A2 D002       177            pop AR2
03A4 208106     177   jb DOWN_BUTTON, endhere_38
03A7 3081FD     177   jnb DOWN_BUTTON, $
03AA 020428     177   ljmp Custom_menu_select
03AD            177   
03AD            177   endhere_38:                      
03AD            178            
03AD 809C       179            sjmp Choose_menu
03AF            180   
03AF            181   Preset_menu_select:
03AF            182            ;Remove messages when blinking cursor is set up
03AF C0E0       183            push acc
03B1 7401       183            mov a, #1
03B3 14         183            dec a
03B4 120096     183            lcall ?Set_Cursor_1 ; Select column and row
03B7 D0E0       183            pop acc
03B9 C083       184            push dph
03BB C082       184            push dpl
03BD C0E0       184            push acc
03BF 9001D2     184            mov dptr, #PRESETMENUMSG
03C2 120089     184            lcall ?Send_Constant_String
03C5 D0E0       184            pop acc
03C7 D082       184            pop dpl
03C9 D083       184            pop dph
03CB C0E0       185            push acc
03CD 7401       185            mov a, #1
03CF 14         185            dec a
03D0 120094     185            lcall ?Set_Cursor_2 ; Select column and row
03D3 D0E0       185            pop acc
03D5 C083       186            push dph
03D7 C082       186            push dpl
03D9 C0E0       186            push acc
03DB 9001C1     186            mov dptr, #Clear_Row
03DE 120089     186            lcall ?Send_Constant_String
03E1 D0E0       186            pop acc
03E3 D082       186            pop dpl
03E5 D083       186            pop dph
03E7            187            
03E7 208112     188   jb DOWN_BUTTON, endhere_44
03EA C002       188            push AR2
03EC 7A32       188            mov R2, #50
03EE 12000E     188            lcall ?Wait_Milli_Seconds
03F1 D002       188            pop AR2
03F3 208106     188   jb DOWN_BUTTON, endhere_44
03F6 3081FD     188   jnb DOWN_BUTTON, $
03F9 020428     188   ljmp Custom_menu_select
03FC            188   
03FC            188   endhere_44:                      
03FC 208212     189   jb SELECT_BUTTON, endhere_46
03FF C002       189            push AR2
0401 7A32       189            mov R2, #50
0403 12000E     189            lcall ?Wait_Milli_Seconds
0406 D002       189            pop AR2
0408 208206     189   jb SELECT_BUTTON, endhere_46
040B 3082FD     189   jnb SELECT_BUTTON, $
040E 0204A1     189   ljmp Preset_menu
0411            189   
0411            189   endhere_46:                      
0411 208412     190   jb BACK_BUTTON, endhere_48
0414 C002       190            push AR2
0416 7A32       190            mov R2, #50
0418 12000E     190            lcall ?Wait_Milli_Seconds
041B D002       190            pop AR2
041D 208406     190   jb BACK_BUTTON, endhere_48
0420 3084FD     190   jnb BACK_BUTTON, $
0423 02034B     190   ljmp Choose_menu
0426            190   
0426            190   endhere_48:                       ; have we determined if we are using a back button or a next button? What is the purpose of a next button? 
0426            191   
0426 8087       192            sjmp Preset_menu_select
0428            193   
0428            194   Custom_menu_select: 
0428            195            ;Remove messages when blinking cursor is set up
0428 C0E0       196            push acc
042A 7401       196            mov a, #1
042C 14         196            dec a
042D 120096     196            lcall ?Set_Cursor_1 ; Select column and row
0430 D0E0       196            pop acc
0432 C083       197            push dph
0434 C082       197            push dpl
0436 C0E0       197            push acc
0438 9001E3     197            mov dptr, #CUSTOMMENUMSG
043B 120089     197            lcall ?Send_Constant_String
043E D0E0       197            pop acc
0440 D082       197            pop dpl
0442 D083       197            pop dph
0444            197   
0444 C0E0       198            push acc
0446 7401       198            mov a, #1
0448 14         198            dec a
0449 120094     198            lcall ?Set_Cursor_2 ; Select column and row
044C D0E0       198            pop acc
044E C083       199            push dph
0450 C082       199            push dpl
0452 C0E0       199            push acc
0454 9001C1     199            mov dptr, #Clear_Row
0457 120089     199            lcall ?Send_Constant_String
045A D0E0       199            pop acc
045C D082       199            pop dpl
045E D083       199            pop dph
0460            200            
0460 208012     201   jb UP_BUTTON, endhere_54
0463 C002       201            push AR2
0465 7A32       201            mov R2, #50
0467 12000E     201            lcall ?Wait_Milli_Seconds
046A D002       201            pop AR2
046C 208006     201   jb UP_BUTTON, endhere_54
046F 3080FD     201   jnb UP_BUTTON, $
0472 0203AF     201   ljmp Preset_menu_select
0475            201   
0475            201   endhere_54:                      
0475 208212     202   jb SELECT_BUTTON, endhere_56
0478 C002       202            push AR2
047A 7A32       202            mov R2, #50
047C 12000E     202            lcall ?Wait_Milli_Seconds
047F D002       202            pop AR2
0481 208206     202   jb SELECT_BUTTON, endhere_56
0484 3082FD     202   jnb SELECT_BUTTON, $
0487 020678     202   ljmp Custom_menu
048A            202   
048A            202   endhere_56:                      
048A 208412     203   jb BACK_BUTTON, endhere_58
048D C002       203            push AR2
048F 7A32       203            mov R2, #50
0491 12000E     203            lcall ?Wait_Milli_Seconds
0494 D002       203            pop AR2
0496 208406     203   jb BACK_BUTTON, endhere_58
0499 3084FD     203   jnb BACK_BUTTON, $
049C 02034B     203   ljmp Choose_menu
049F            203   
049F            203   endhere_58:                      
049F            204   
049F 8087       205            sjmp Custom_menu_select
04A1            206   
04A1            207   ;------------------ Preset Menu END----------------------------------;
04A1            208   Preset_menu: 
04A1 C0E0       209            push acc
04A3 7401       209            mov a, #1
04A5 14         209            dec a
04A6 120096     209            lcall ?Set_Cursor_1 ; Select column and row
04A9 D0E0       209            pop acc
04AB C083       210            push dph
04AD C082       210            push dpl
04AF C0E0       210            push acc
04B1 900139     210            mov dptr, #Pb_free_solder
04B4 120089     210            lcall ?Send_Constant_String
04B7 D0E0       210            pop acc
04B9 D082       210            pop dpl
04BB D083       210            pop dph
04BD C0E0       211            push acc
04BF 7401       211            mov a, #1
04C1 14         211            dec a
04C2 120094     211            lcall ?Set_Cursor_2 ; Select column and row
04C5 D0E0       211            pop acc
04C7 C083       212            push dph
04C9 C082       212            push dpl
04CB C0E0       212            push acc
04CD 90014A     212            mov dptr, #Pb_solder
04D0 120089     212            lcall ?Send_Constant_String
04D3 D0E0       212            pop acc
04D5 D082       212            pop dpl
04D7 D083       212            pop dph
04D9            213   
04D9            214   
04D9 208012     215   jb UP_BUTTON, endhere_64
04DC C002       215            push AR2
04DE 7A32       215            mov R2, #50
04E0 12000E     215            lcall ?Wait_Milli_Seconds
04E3 D002       215            pop AR2
04E5 208006     215   jb UP_BUTTON, endhere_64
04E8 3080FD     215   jnb UP_BUTTON, $
04EB 02051B     215   ljmp pb_free_select
04EE            215   
04EE            215   endhere_64:                      
04EE 208112     216   jb DOWN_BUTTON, endhere_66
04F1 C002       216            push AR2
04F3 7A32       216            mov R2, #50
04F5 12000E     216            lcall ?Wait_Milli_Seconds
04F8 D002       216            pop AR2
04FA 208106     216   jb DOWN_BUTTON, endhere_66
04FD 3081FD     216   jnb DOWN_BUTTON, $
0500 02055C     216   ljmp pb_select
0503            216   
0503            216   endhere_66:                      
0503 208412     217   jb BACK_BUTTON, endhere_68
0506 C002       217            push AR2
0508 7A32       217            mov R2, #50
050A 12000E     217            lcall ?Wait_Milli_Seconds
050D D002       217            pop AR2
050F 208406     217   jb BACK_BUTTON, endhere_68
0512 3084FD     217   jnb BACK_BUTTON, $
0515 02034B     217   ljmp Choose_menu
0518            217   
0518            217   endhere_68:                      
0518            218   
0518 0204A1     219            ljmp Preset_menu
051B            220   
051B            221   pb_free_select: 
051B 208112     222   jb DOWN_BUTTON, endhere_70
051E C002       222            push AR2
0520 7A32       222            mov R2, #50
0522 12000E     222            lcall ?Wait_Milli_Seconds
0525 D002       222            pop AR2
0527 208106     222   jb DOWN_BUTTON, endhere_70
052A 3081FD     222   jnb DOWN_BUTTON, $
052D 02055C     222   ljmp pb_select
0530            222   
0530            222   endhere_70:                      
0530 208212     223   jb SELECT_BUTTON, endhere_72
0533 C002       223            push AR2
0535 7A32       223            mov R2, #50
0537 12000E     223            lcall ?Wait_Milli_Seconds
053A D002       223            pop AR2
053C 208206     223   jb SELECT_BUTTON, endhere_72
053F 3082FD     223   jnb SELECT_BUTTON, $
0542 0205E4     223   ljmp pb_free_solder_set
0545            223   
0545            223   endhere_72:                      
0545 208412     224   jb BACK_BUTTON, endhere_74
0548 C002       224            push AR2
054A 7A32       224            mov R2, #50
054C 12000E     224            lcall ?Wait_Milli_Seconds
054F D002       224            pop AR2
0551 208406     224   jb BACK_BUTTON, endhere_74
0554 3084FD     224   jnb BACK_BUTTON, $
0557 02034B     224   ljmp Choose_menu
055A            224   
055A            224   endhere_74:                      
055A            225   
055A 80BF       226            sjmp pb_free_select
055C            227   
055C            228   pb_select: 
055C 208012     229   jb UP_BUTTON, endhere_76
055F C002       229            push AR2
0561 7A32       229            mov R2, #50
0563 12000E     229            lcall ?Wait_Milli_Seconds
0566 D002       229            pop AR2
0568 208006     229   jb UP_BUTTON, endhere_76
056B 3080FD     229   jnb UP_BUTTON, $
056E 02051B     229   ljmp pb_free_select
0571            229   
0571            229   endhere_76:                      
0571 208212     230   jb SELECT_BUTTON, endhere_78
0574 C002       230            push AR2
0576 7A32       230            mov R2, #50
0578 12000E     230            lcall ?Wait_Milli_Seconds
057B D002       230            pop AR2
057D 208206     230   jb SELECT_BUTTON, endhere_78
0580 3082FD     230   jnb SELECT_BUTTON, $
0583 02059D     230   ljmp pb_solder_set
0586            230   
0586            230   endhere_78:                      
0586 208412     231   jb BACK_BUTTON, endhere_80
0589 C002       231            push AR2
058B 7A32       231            mov R2, #50
058D 12000E     231            lcall ?Wait_Milli_Seconds
0590 D002       231            pop AR2
0592 208406     231   jb BACK_BUTTON, endhere_80
0595 3084FD     231   jnb BACK_BUTTON, $
0598 02034B     231   ljmp Choose_menu
059B            231   
059B            231   endhere_80:                      
059B            232   
059B 80BF       233            sjmp pb_select
059D            234   
059D            235   
059D            236   pb_solder_set:           ; for soldering with the Sn63Pb37 alloy         
059D C0E0       237            push acc
059F 7401       237            mov a, #1
05A1 14         237            dec a
05A2 120096     237            lcall ?Set_Cursor_1 ; Select column and row
05A5 D0E0       237            pop acc
05A7 C083       238            push dph
05A9 C082       238            push dpl
05AB C0E0       238            push acc
05AD 90014A     238            mov dptr, #Pb_solder
05B0 120089     238            lcall ?Send_Constant_String
05B3 D0E0       238            pop acc
05B5 D082       238            pop dpl
05B7 D083       238            pop dph
05B9 C0E0       239            push acc
05BB 7401       239            mov a, #1
05BD 14         239            dec a
05BE 120094     239            lcall ?Set_Cursor_2 ; Select column and row
05C1 D0E0       239            pop acc
05C3 C083       240            push dph
05C5 C082       240            push dpl
05C7 C0E0       240            push acc
05C9 90017D     240            mov dptr, #Profile_loaded
05CC 120089     240            lcall ?Send_Constant_String
05CF D0E0       240            pop acc
05D1 D082       240            pop dpl
05D3 D083       240            pop dph
05D5            241            ;mov a, #120
05D5            242            ;da a 
05D5 754178     243            mov soaktime, #120
05D8            244   ;        mov a, #150
05D8            245            ;da a
05D8 754396     246            mov soaktemp, #150
05DB 754514     247            mov reflowtime, #20
05DE 7547E6     248            mov reflowtemp, #230
05E1            249   
05E1 0202BC     250            ljmp system_ready
05E4            251   
05E4            252   pb_free_solder_set:      ;for soldering SAC305 lead-free solder 
05E4 C0E0       253            push acc
05E6 7401       253            mov a, #1
05E8 14         253            dec a
05E9 120096     253            lcall ?Set_Cursor_1 ; Select column and row
05EC D0E0       253            pop acc
05EE C083       254            push dph
05F0 C082       254            push dpl
05F2 C0E0       254            push acc
05F4 900139     254            mov dptr, #Pb_free_solder
05F7 120089     254            lcall ?Send_Constant_String
05FA D0E0       254            pop acc
05FC D082       254            pop dpl
05FE D083       254            pop dph
0600 C0E0       255            push acc
0602 7401       255            mov a, #1
0604 14         255            dec a
0605 120094     255            lcall ?Set_Cursor_2 ; Select column and row
0608 D0E0       255            pop acc
060A C083       256            push dph
060C C082       256            push dpl
060E C0E0       256            push acc
0610 90017D     256            mov dptr, #Profile_loaded
0613 120089     256            lcall ?Send_Constant_String
0616 D0E0       256            pop acc
0618 D082       256            pop dpl
061A D083       256            pop dph
061C            257            
061C            258   ;        mov a, #120
061C            259   ;        da a
061C 754178     260            mov soaktime, #120
061F            261            
061F            262   ;        mov a, #160
061F            263   ;        da a
061F 7543A0     264            mov soaktemp, #160
0622 740F       265            mov a, #15
0624            266   ;        da a
0624 F545       267            mov reflowtime, a
0626            268            
0626 74F5       269            mov a, #245
0628            270   ;        da a
0628 F547       271            mov reflowtemp, a
062A 0202BC     272            ljmp system_ready
062D            273   
062D            274   Pb_free_secret_pizza:                            ; can we include this as a joke/bonus pls???
062D C0E0       275            push acc
062F 7401       275            mov a, #1
0631 14         275            dec a
0632 120096     275            lcall ?Set_Cursor_1 ; Select column and row
0635 D0E0       275            pop acc
0637 C083       276            push dph
0639 C082       276            push dpl
063B C0E0       276            push acc
063D 90015B     276            mov dptr, #Pizza_msg0
0640 120089     276            lcall ?Send_Constant_String
0643 D0E0       276            pop acc
0645 D082       276            pop dpl
0647 D083       276            pop dph
0649 C0E0       277            push acc
064B 7401       277            mov a, #1
064D 14         277            dec a
064E 120094     277            lcall ?Set_Cursor_2 ; Select column and row
0651 D0E0       277            pop acc
0653 C083       278            push dph
0655 C082       278            push dpl
0657 C0E0       278            push acc
0659 90016C     278            mov dptr, #Pizza_msg1
065C 120089     278            lcall ?Send_Constant_String
065F D0E0       278            pop acc
0661 D082       278            pop dpl
0663 D083       278            pop dph
0665            279   
0665 741E       280            mov a, #30
0667            281   ;        da a
0667 F541       282            mov soaktime, a
0669 74C8       283            mov a, #200
066B            284   ;        da a
066B F543       285            mov soaktemp, a
066D            286            
066D 7414       287            mov a , #20
066F            288   ;        da a
066F F545       289            mov reflowtime, a
0671 74F5       290            mov a, #245
0673            291   ;        da a
0673 F547       292            mov reflowtemp, a
0675            293   
0675 0202BC     294            ljmp system_ready
0678            295            
0678            296   ;------------------ Preset Menu END----------------------------------;   
0678            297   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0678            298   ;;;                      Custom Menu Begin
0678            299   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0678            300   Custom_menu: 
0678 C0E0       301            push acc
067A 7401       301            mov a, #1
067C 14         301            dec a
067D 120096     301            lcall ?Set_Cursor_1 ; Select column and row
0680 D0E0       301            pop acc
0682 C083       302            push dph
0684 C082       302            push dpl
0686 C0E0       302            push acc
0688 9000E4     302            mov dptr, #Custom_menu_msg
068B 120089     302            lcall ?Send_Constant_String
068E D0E0       302            pop acc
0690 D082       302            pop dpl
0692 D083       302            pop dph
0694 C0E0       303            push acc
0696 7401       303            mov a, #1
0698 14         303            dec a
0699 120094     303            lcall ?Set_Cursor_2 ; Select column and row
069C D0E0       303            pop acc
069E C083       304            push dph
06A0 C082       304            push dpl
06A2 C0E0       304            push acc
06A4 9001C1     304            mov dptr, #Clear_Row
06A7 120089     304            lcall ?Send_Constant_String
06AA D0E0       304            pop acc
06AC D082       304            pop dpl
06AE D083       304            pop dph
06B0            305            ;Wait until select button is pressed then loop to options
06B0            306            ;button_jmp(SELECT_BUTTON, Forever_loop)
06B0            307            ;jb SELECT_BUTTON, Forever_loop
06B0            308            ;Wait_Milli_Seconds(#50)
06B0            309            ;jb SELECT_BUTTON, Forever_loop
06B0            310            ;jnb SELECT_BUTTON, $
06B0 208212     311   jb SELECT_BUTTON, endhere_98
06B3 C002       311            push AR2
06B5 7A32       311            mov R2, #50
06B7 12000E     311            lcall ?Wait_Milli_Seconds
06BA D002       311            pop AR2
06BC 208206     311   jb SELECT_BUTTON, endhere_98
06BF 3082FD     311   jnb SELECT_BUTTON, $
06C2 0206CF     311   ljmp Set_Soak_temp
06C5            311   
06C5            311   endhere_98:                      
06C5 8000       312            sjmp Forever_loop
06C7            313            ;ljmp Set_Soak_temp
06C7            314            
06C7            315   Forever_loop:
06C7 308402     316            jnb BACK_BUTTON, Custom_to_Choose_menu
06CA 80AC       317            sjmp Custom_menu        
06CC            318   Custom_to_Choose_menu:
06CC 02034B     319            ljmp Choose_menu
06CF            320   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
06CF            321   ;;;                      Set Soak Temp
06CF            322   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         
06CF            323   Set_Soak_temp:   
06CF C0E0       324            push acc
06D1 7401       324            mov a, #1
06D3 14         324            dec a
06D4 120096     324            lcall ?Set_Cursor_1 ; Select column and row
06D7 D0E0       324            pop acc
06D9 C083       325            push dph
06DB C082       325            push dpl
06DD C0E0       325            push acc
06DF 9000F5     325            mov dptr, #Soak_temp
06E2 120089     325            lcall ?Send_Constant_String
06E5 D0E0       325            pop acc
06E7 D082       325            pop dpl
06E9 D083       325            pop dph
06EB C0E0       326            push acc
06ED 7401       326            mov a, #1
06EF 14         326            dec a
06F0 120094     326            lcall ?Set_Cursor_2 ; Select column and row
06F3 D0E0       326            pop acc
06F5 C000       327            push ar0
06F7 A843       327            mov r0, soaktemp
06F9 12009B     327            lcall ?Display_BCD
06FC D000       327            pop ar0
06FE            328            ;if up/down buttons pressed branch and inc/dec params
06FE 208023     329            jb UP_BUTTON, Decrease_soaktemp
0701 C002       330            push AR2
0703 7A32       330            mov R2, #50
0705 12000E     330            lcall ?Wait_Milli_Seconds
0708 D002       330            pop AR2
070A 208017     331            jb UP_BUTTON, Decrease_soaktemp
070D 3080FD     332            jnb UP_BUTTON, $
0710 E543       333            mov a, soaktemp
0712 2401       334            add a, #0x01
0714 D4         335            da a
0715 B49906     336            cjne a, #0x99, Increase_soaktemp_loop
0718 E4         337            clr a 
0719 F543       338            mov soaktemp, a
071B 0206CF     339            ljmp Set_Soak_temp
071E            340            
071E            341   Increase_soaktemp_loop:
071E F543       342            mov soaktemp, a
0720 E4         343            clr a   
0721 0206CF     344            ljmp Set_Soak_temp      
0724            345            
0724            346   Decrease_soaktemp:
0724 208123     347            jb DOWN_BUTTON, Nextmenu1
0727 C002       348            push AR2
0729 7A32       348            mov R2, #50
072B 12000E     348            lcall ?Wait_Milli_Seconds
072E D002       348            pop AR2
0730 208117     349            jb DOWN_BUTTON, Nextmenu1
0733 3081FD     350            jnb DOWN_BUTTON, $      
0736 E543       351            mov a, soaktemp
0738 2499       352            add a, #0x99
073A D4         353            da a
073B B40006     354            cjne a, #0x00, Decrease_soaktemp_loop
073E E4         355            clr a 
073F F543       356            mov soaktemp, a
0741 0206CF     357            ljmp Set_Soak_temp
0744            358            
0744            359   Decrease_soaktemp_loop:
0744 F543       360            mov soaktemp, a
0746 E4         361            clr a   
0747 0206CF     362            ljmp Set_Soak_temp      
074A            363   Nextmenu1:
074A 308303     364            jnb NEXT_BUTTON, Set_Soak_time
074D 0206CF     365            ljmp Set_Soak_temp      
0750            366   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0750            367   ;;;                      Set Soak Time
0750            368   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0750            369   Set_Soak_time:
0750 3083FD     370            jnb NEXT_BUTTON, $
0753 C0E0       371            push acc
0755 7401       371            mov a, #1
0757 14         371            dec a
0758 120096     371            lcall ?Set_Cursor_1 ; Select column and row
075B D0E0       371            pop acc
075D C083       372            push dph
075F C082       372            push dpl
0761 C0E0       372            push acc
0763 900106     372            mov dptr, #Soak_time
0766 120089     372            lcall ?Send_Constant_String
0769 D0E0       372            pop acc
076B D082       372            pop dpl
076D D083       372            pop dph
076F C0E0       373            push acc
0771 7401       373            mov a, #1
0773 14         373            dec a
0774 120094     373            lcall ?Set_Cursor_2 ; Select column and row
0777 D0E0       373            pop acc
0779 C000       374            push ar0
077B A841       374            mov r0, soaktime
077D 12009B     374            lcall ?Display_BCD
0780 D000       374            pop ar0
0782            375            ;Button_jmp(UP_BUTTON,Decrease_soaktime)
0782            376            ;if up/down buttons pressed branch and inc/dec params
0782 208023     377            jb UP_BUTTON, Decrease_soaktime
0785 C002       378            push AR2
0787 7A32       378            mov R2, #50
0789 12000E     378            lcall ?Wait_Milli_Seconds
078C D002       378            pop AR2
078E 208017     379            jb UP_BUTTON, Decrease_soaktime
0791 3080FD     380            jnb UP_BUTTON, $
0794 E541       381            mov a, soaktime
0796 2401       382            add a, #0x01
0798 D4         383            da a
0799 B49906     384            cjne a, #0x99, Increase_soaktime_loop
079C E4         385            clr a 
079D F541       386            mov soaktime, a
079F 020750     387            ljmp Set_Soak_time
07A2            388            
07A2            389   Increase_soaktime_loop:
07A2 F541       390            mov soaktime, a
07A4 E4         391            clr a   
07A5 020750     392            ljmp Set_Soak_time      
07A8            393            
07A8            394   Decrease_soaktime:
07A8 208123     395            jb DOWN_BUTTON, Nextmenu2
07AB C002       396            push AR2
07AD 7A32       396            mov R2, #50
07AF 12000E     396            lcall ?Wait_Milli_Seconds
07B2 D002       396            pop AR2
07B4 208117     397            jb DOWN_BUTTON, Nextmenu2
07B7 3081FD     398            jnb DOWN_BUTTON, $      
07BA E541       399            mov a, soaktime
07BC 2499       400            add a, #0x99
07BE D4         401            da a
07BF B40006     402            cjne a, #0x00, Decrease_soaktime_loop
07C2 E4         403            clr a 
07C3 F541       404            mov soaktime, a
07C5 020750     405            ljmp Set_Soak_time
07C8            406            
07C8            407   Decrease_soaktime_loop:
07C8 F541       408            mov soaktime, a
07CA E4         409            clr a   
07CB 020750     410            ljmp Set_Soak_time      
07CE            411   Nextmenu2:
07CE 308303     412            jnb NEXT_BUTTON, Set_Reflow_temp 
07D1 020750     413            ljmp Set_Soak_time
07D4            414   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
07D4            415   ;;;                      Set Reflow Temp
07D4            416   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
07D4            417   Set_Reflow_temp:
07D4 3083FD     418            jnb NEXT_BUTTON, $
07D7 C0E0       419            push acc
07D9 7401       419            mov a, #1
07DB 14         419            dec a
07DC 120096     419            lcall ?Set_Cursor_1 ; Select column and row
07DF D0E0       419            pop acc
07E1 C083       420            push dph
07E3 C082       420            push dpl
07E5 C0E0       420            push acc
07E7 900128     420            mov dptr, #Reflow_temp
07EA 120089     420            lcall ?Send_Constant_String
07ED D0E0       420            pop acc
07EF D082       420            pop dpl
07F1 D083       420            pop dph
07F3 C0E0       421            push acc
07F5 7401       421            mov a, #1
07F7 14         421            dec a
07F8 120094     421            lcall ?Set_Cursor_2 ; Select column and row
07FB D0E0       421            pop acc
07FD            421   
07FD C000       422            push ar0
07FF A847       422            mov r0, reflowtemp
0801 12009B     422            lcall ?Display_BCD
0804 D000       422            pop ar0
0806            423            ;if up/down buttons pressed branch and inc/dec params
0806 208023     424            jb UP_BUTTON, Decrease_reflowtemp
0809 C002       425            push AR2
080B 7A32       425            mov R2, #50
080D 12000E     425            lcall ?Wait_Milli_Seconds
0810 D002       425            pop AR2
0812 208017     426            jb UP_BUTTON, Decrease_reflowtemp
0815 3080FD     427            jnb UP_BUTTON, $
0818 E547       428            mov a, reflowtemp
081A 2401       429            add a, #0x01
081C D4         430            da a
081D B49906     431            cjne a, #0x99, Increase_reflowtemp_loop
0820 E4         432            clr a 
0821 F547       433            mov reflowtemp, a
0823 0207D4     434            ljmp Set_Reflow_temp
0826            435            
0826            436   Increase_reflowtemp_loop:
0826 F547       437            mov reflowtemp, a
0828 E4         438            clr a   
0829 0207D4     439            ljmp Set_Reflow_temp    
082C            440            
082C            441   Decrease_reflowtemp:
082C 208123     442            jb DOWN_BUTTON, Nextmenu3
082F C002       443            push AR2
0831 7A32       443            mov R2, #50
0833 12000E     443            lcall ?Wait_Milli_Seconds
0836 D002       443            pop AR2
0838 208117     444            jb DOWN_BUTTON, Nextmenu3
083B 3081FD     445            jnb DOWN_BUTTON, $      
083E E547       446            mov a, reflowtemp
0840 2499       447            add a, #0x99
0842 D4         448            da a
0843 B40006     449            cjne a, #0x00, Decrease_reflowtemp_loop
0846 E4         450            clr a 
0847 F547       451            mov reflowtemp, a
0849 0207D4     452            ljmp Set_Reflow_temp
084C            453            
084C            454   Decrease_reflowtemp_loop:
084C F547       455            mov reflowtemp, a
084E E4         456            clr a   
084F 0207D4     457            ljmp Set_Reflow_temp    
0852            458   Nextmenu3:
0852 308303     459            jnb NEXT_BUTTON, Set_Reflow_time 
0855 0207D4     460            ljmp Set_Reflow_temp
0858            461   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0858            462   ;;;                      Set Reflow Time
0858            463   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         
0858            464   Set_Reflow_time:
0858 3083FD     465            jnb NEXT_BUTTON, $
085B C0E0       466            push acc
085D 7401       466            mov a, #1
085F 14         466            dec a
0860 120096     466            lcall ?Set_Cursor_1 ; Select column and row
0863 D0E0       466            pop acc
0865 C083       467            push dph
0867 C082       467            push dpl
0869 C0E0       467            push acc
086B 900117     467            mov dptr, #Reflow_time
086E 120089     467            lcall ?Send_Constant_String
0871 D0E0       467            pop acc
0873 D082       467            pop dpl
0875 D083       467            pop dph
0877 C0E0       468            push acc
0879 7401       468            mov a, #1
087B 14         468            dec a
087C 120094     468            lcall ?Set_Cursor_2 ; Select column and row
087F D0E0       468            pop acc
0881            468   
0881 C000       469            push ar0
0883 A845       469            mov r0, reflowtime
0885 12009B     469            lcall ?Display_BCD
0888 D000       469            pop ar0
088A            470            ;if up/down buttons pressed branch and inc/dec params
088A 208023     471            jb UP_BUTTON, Decrease_reflowtime
088D C002       472            push AR2
088F 7A32       472            mov R2, #50
0891 12000E     472            lcall ?Wait_Milli_Seconds
0894 D002       472            pop AR2
0896 208017     473            jb UP_BUTTON, Decrease_reflowtime
0899 3080FD     474            jnb UP_BUTTON, $
089C E545       475            mov a, reflowtime
089E 2401       476            add a, #0x01
08A0 D4         477            da a
08A1 B49906     478            cjne a, #0x99, Increase_reflowtime_loop
08A4 E4         479            clr a 
08A5 F545       480            mov reflowtime, a
08A7 020858     481            ljmp Set_Reflow_time
08AA            482            
08AA            483   Increase_reflowtime_loop:
08AA F545       484            mov reflowtime, a
08AC E4         485            clr a   
08AD 020858     486            ljmp Set_Reflow_time
08B0            487            
08B0            488   Decrease_reflowtime:
08B0 208123     489            jb DOWN_BUTTON, Nextmenu4
08B3 C002       490            push AR2
08B5 7A32       490            mov R2, #50
08B7 12000E     490            lcall ?Wait_Milli_Seconds
08BA D002       490            pop AR2
08BC 208117     491            jb DOWN_BUTTON, Nextmenu4
08BF 3081FD     492            jnb DOWN_BUTTON, $      
08C2 E545       493            mov a, reflowtime
08C4 2499       494            add a, #0x99
08C6 D4         495            da a
08C7 B40006     496            cjne a, #0x00, Decrease_reflowtime_loop
08CA E4         497            clr a 
08CB F545       498            mov reflowtime, a
08CD 020858     499            ljmp Set_Reflow_time
08D0            500            
08D0            501   Decrease_reflowtime_loop:
08D0 F545       502            mov reflowtime, a
08D2 E4         503            clr a   
08D3 020858     504            ljmp Set_Reflow_time
08D6            505   Nextmenu4:
08D6 308303     506            jnb NEXT_BUTTON, Custom_menu_loopback
08D9 020858     507            ljmp Set_Reflow_time
08DC            508            
08DC            509   Custom_menu_loopback:
08DC C0E0       510            push acc
08DE 7401       510            mov a, #1
08E0 14         510            dec a
08E1 120096     510            lcall ?Set_Cursor_1 ; Select column and row
08E4 D0E0       510            pop acc
08E6 C083       511            push dph
08E8 C082       511            push dpl
08EA C0E0       511            push acc
08EC 9001F4     511            mov dptr, #Are_you_sure
08EF 120089     511            lcall ?Send_Constant_String
08F2 D0E0       511            pop acc
08F4 D082       511            pop dpl
08F6 D083       511            pop dph
08F8 C0E0       512            push acc
08FA 7401       512            mov a, #1
08FC 14         512            dec a
08FD 120094     512            lcall ?Set_Cursor_2 ; Select column and row
0900 D0E0       512            pop acc
0902 C083       513            push dph
0904 C082       513            push dpl
0906 C0E0       513            push acc
0908 9001C1     513            mov dptr, #Clear_Row
090B 120089     513            lcall ?Send_Constant_String
090E D0E0       513            pop acc
0910 D082       513            pop dpl
0912 D083       513            pop dph
0914 308003     514            jnb UP_BUTTON, lllaaa
0917 0208DC     515            ljmp Custom_menu_loopback
091A            516   lllaaa:
091A 020678     517            ljmp Custom_menu
091D            518   ;----------------Custom Menu End----------------;
091D            519   
091D            520   
091D            521            
091D            522   En
