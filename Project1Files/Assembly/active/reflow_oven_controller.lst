                 -1   $MODLP51
0000              1   ;--------------------------------------------------------
0000              2   ; Special Function Registers
0000              3   ;--------------------------------------------------------
0000              4   ACC            DATA 0xe0
0000              5   B              DATA 0xf0
0000              6   PSW            DATA 0xd0
0000              7   SP             DATA 0x81
0000              8   SPX            DATA 0xef
0000              9   DPL            DATA 0x82
0000             10   DPH            DATA 0x83
0000             11   DPLB           DATA 0xd4
0000             12   DPHB           DATA 0xd5
0000             13   PAGE           DATA 0xf6
0000             14   AX             DATA 0xe1
0000             15   BX             DATA 0xf7
0000             16   DSPR           DATA 0xe2
0000             17   FIRD           DATA 0xe3
0000             18   MACL           DATA 0xe4
0000             19   MACH           DATA 0xe5
0000             20   PCON           DATA 0x87
0000             21   AUXR           DATA 0x8e
0000             22   AUXR1          DATA 0xa2
0000             23   DPCF           DATA 0xa1
0000             24   CKRL           DATA 0x97
0000             25   CKCKON0        DATA 0x8f
0000             26   CKCKON1        DATA 0xaf
0000             27   CKSEL          DATA 0x85
0000             28   CLKREG         DATA 0xae
0000             29   OSCCON         DATA 0x85
0000             30   IE             DATA 0xa8
0000             31   IEN0           DATA 0xa8
0000             32   IEN1           DATA 0xb1
0000             33   IPH0           DATA 0xb7
0000             34   IP             DATA 0xb8
0000             35   IPL0           DATA 0xb8
0000             36   IPH1           DATA 0xb3
0000             37   IPL1           DATA 0xb2
0000             38   P0             DATA 0x80
0000             39   P1             DATA 0x90
0000             40   P2             DATA 0xa0
0000             41   P3             DATA 0xb0
0000             42   P4             DATA 0xc0
0000             43   P0M0           DATA 0xe6
0000             44   P0M1           DATA 0xe7
0000             45   P1M0           DATA 0xd6
0000             46   P1M1           DATA 0xd7
0000             47   P2M0           DATA 0xce
0000             48   P2M1           DATA 0xcf
0000             49   P3M0           DATA 0xc6
0000             50   P3M1           DATA 0xc7
0000             51   P4M0           DATA 0xbe
0000             52   P4M1           DATA 0xbf
0000             53   SCON           DATA 0x98
0000             54   SBUF           DATA 0x99
0000             55   SADEN          DATA 0xb9
0000             56   SADDR          DATA 0xa9
0000             57   BDRCON         DATA 0x9b
0000             58   BRL            DATA 0x9a
0000             59   TCON           DATA 0x88
0000             60   TMOD           DATA 0x89
0000             61   TCONB          DATA 0x91
0000             62   TL0            DATA 0x8a
0000             63   TH0            DATA 0x8c
0000             64   TL1            DATA 0x8b
0000             65   TH1            DATA 0x8d
0000             66   RL0            DATA 0xf2
0000             67   RL1            DATA 0xf3
0000             68   RH0            DATA 0xf4
0000             69   RH1            DATA 0xf5
0000             70   WDTRST         DATA 0xa6
0000             71   WDTPRG         DATA 0xa7
0000             72   T2CON          DATA 0xc8
0000             73   T2MOD          DATA 0xc9
0000             74   RCAP2H         DATA 0xcb
0000             75   RCAP2L         DATA 0xca
0000             76   TH2            DATA 0xcd
0000             77   TL2            DATA 0xcc
0000             78   SPCON          DATA 0xc3
0000             79   SPSTA          DATA 0xc4
0000             80   SPDAT          DATA 0xc5
0000             81   SSCON          DATA 0x93
0000             82   SSCS           DATA 0x94
0000             83   SSDAT          DATA 0x95
0000             84   SSADR          DATA 0x96
0000             85   KBLS           DATA 0x9c
0000             86   KBE            DATA 0x9d
0000             87   KBF            DATA 0x9e
0000             88   KBMOD          DATA 0x9f
0000             89   BMSEL          DATA 0x92
0000             90   FCON           DATA 0xd2
0000             91   EECON          DATA 0xd2
0000             92   ACSRA          DATA 0xa3
0000             93   ACSRB          DATA 0xab
0000             94   AREF           DATA 0xbd
0000             95   DADC           DATA 0xa4
0000             96   DADI           DATA 0xa5
0000             97   DADL           DATA 0xac
0000             98   DADH           DATA 0xad
0000             99   CCON           DATA 0xd8
0000            100   CMOD           DATA 0xd9
0000            101   CL             DATA 0xe9
0000            102   CH             DATA 0xf9
0000            103   CCAPM0         DATA 0xda
0000            104   CCAPM1         DATA 0xdb
0000            105   CCAPM2         DATA 0xdc
0000            106   CCAPM3         DATA 0xdd
0000            107   CCAPM4         DATA 0xde
0000            108   CCAP0H         DATA 0xfa
0000            109   CCAP1H         DATA 0xfb
0000            110   CCAP2H         DATA 0xfc
0000            111   CCAP3H         DATA 0xfd
0000            112   CCAP4H         DATA 0xfe
0000            113   CCAP0L         DATA 0xea
0000            114   CCAP1L         DATA 0xeb
0000            115   CCAP2L         DATA 0xec
0000            116   CCAP3L         DATA 0xed
0000            117   CCAP4L         DATA 0xee
0000            118   ;--------------------------------------------------------
0000            119   ; special function bits
0000            120   ;--------------------------------------------------------
0000            121   P              BIT 0xd0
0000            122   F1             BIT 0xd1
0000            123   OV             BIT 0xd2
0000            124   RS0            BIT 0xd3
0000            125   RS1            BIT 0xd4
0000            126   F0             BIT 0xd5
0000            127   AC             BIT 0xd6
0000            128   CY             BIT 0xd7
0000            129   EX0            BIT 0xa8
0000            130   ET0            BIT 0xa9
0000            131   EX1            BIT 0xaa
0000            132   ET1            BIT 0xab
0000            133   ES             BIT 0xac
0000            134   ET2            BIT 0xad
0000            135   EC             BIT 0xae
0000            136   EA             BIT 0xaf
0000            137   PX0            BIT 0xb8
0000            138   PT0            BIT 0xb9
0000            139   PX1            BIT 0xba
0000            140   PT1            BIT 0xbb
0000            141   PS             BIT 0xbc
0000            142   PT2            BIT 0xbd
0000            143   IP0D           BIT 0xbf
0000            144   PPCL           BIT 0xbe
0000            145   PT2L           BIT 0xbd
0000            146   PLS            BIT 0xbc
0000            147   PT1L           BIT 0xbb
0000            148   PX1L           BIT 0xba
0000            149   PT0L           BIT 0xb9
0000            150   PX0L           BIT 0xb8
0000            151   RXD            BIT 0xb0
0000            152   TXD            BIT 0xb1
0000            153   INT0           BIT 0xb2
0000            154   INT1           BIT 0xb3
0000            155   T0             BIT 0xb4
0000            156   T1             BIT 0xb5
0000            157   WR             BIT 0xb6
0000            158   RD             BIT 0xb7
0000            159   RI             BIT 0x98
0000            160   TI             BIT 0x99
0000            161   RB8            BIT 0x9a
0000            162   TB8            BIT 0x9b
0000            163   REN            BIT 0x9c
0000            164   SM2            BIT 0x9d
0000            165   SM1            BIT 0x9e
0000            166   SM0            BIT 0x9f
0000            167   IT0            BIT 0x88
0000            168   IE0            BIT 0x89
0000            169   IT1            BIT 0x8a
0000            170   IE1            BIT 0x8b
0000            171   TR0            BIT 0x8c
0000            172   TF0            BIT 0x8d
0000            173   TR1            BIT 0x8e
0000            174   TF1            BIT 0x8f
0000            175   CP_RL2         BIT 0xc8
0000            176   C_T2           BIT 0xc9
0000            177   TR2            BIT 0xca
0000            178   EXEN2          BIT 0xcb
0000            179   TCLK           BIT 0xcc
0000            180   RCLK           BIT 0xcd
0000            181   EXF2           BIT 0xce
0000            182   TF2            BIT 0xcf
0000            183   CF             BIT 0xdf
0000            184   CR             BIT 0xde
0000            185   CCF4           BIT 0xdc
0000            186   CCF3           BIT 0xdb
0000            187   CCF2           BIT 0xda
0000            188   CCF1           BIT 0xd9
0000            189   CCF0           BIT 0xd8
0000              2   
0000              3   ; There is a couple of typos in MODLP51 in the definition of the timer 0/1 reload
0000              4   ; special function registers (SFRs), so:
0000              5   
0000              6   TIMER0_RELOAD_L DATA 0xf2
0000              7   TIMER1_RELOAD_L DATA 0xf3
0000              8   TIMER0_RELOAD_H DATA 0xf4
0000              9   TIMER1_RELOAD_H DATA 0xf5
0000             10   
0000             11   CLK              EQU 22118400 ; Microcontroller system crystal frequency in Hz
0000             12   TIMER0_RATE      EQU 4096     ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0000             13   TIMER0_RELOAD    EQU ((65536-(CLK/TIMER0_RATE)))
0000             14   TIMER2_RATE      EQU 1000     ; 1000Hz, for a timer tick of 1ms
0000             15   TIMER2_RELOAD    EQU ((65536-(CLK/TIMER2_RATE)))
0000             16   MAX_TEMP              EQU 250
0000             17   TIMEOUT_TIME     EQU 60
0000             18   BAUD             EQU 115200
0000             19   BRG_VAL          EQU (0x100-(CLK/(16*BAUD)))
0000             20   MILLISECOND_WAIT EQU 100                 ; how many milliseconds between temp samples, needs to be a number evenly divisible into 1000
0000             21   Seconds_coeff     equ (1000/MILLISECOND_WAIT)
0000             22   ABORT_TIME                EQU 60
0000             23   ABORT_TEMP                EQU 50
0000             24   
0000             25   DUTY_0           EQU 0
0000             26   DUTY_20          EQU 51   ;256 * 0.2
0000             27   DUTY_50          EQU 128  ;256 * 0.5
0000             28   DUTY_80          EQU 204  ;256 * 0.8
0000             29   DUTY_100         EQU 255
0000             30   
0000             31   org 0x0000
0000 0241E4      32      ljmp MainProgram
0003             33   
0003             34   ; External interrupt 0 vector (not used in this code)
0003             35   org 0x0003
0003 32          36            reti
0004             37   
0004             38   ; Timer/Counter 0 overflow interrupt vector
000B             39   org 0x000B
000B 02416C      40            ljmp Timer0_ISR
000E             41   
000E             42   ; External interrupt 1 vector (not used in this code)
0013             43   org 0x0013
0013 32          44            reti
0014             45   
0014             46   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B             47   org 0x001B
001B 32          48            reti
001C             49   
001C             50   ; Serial port receive/transmit interrupt vector (not used in this code)
0023             51   org 0x0023 
0023 32          52            reti
0024             53            
0024             54   ; Timer/Counter 2 overflow interrupt vector
002B             55   org 0x002B
002B 0241A9      56            ljmp Timer2_ISR
002E             57   
002E             58   ;Edge triggered keyboard interrupt vector
003B             59   org 0x003B
003B 32          60            reti
003C             61   
003C             62   ; These ’EQU’ must match the wiring between the microcontroller and ADC
003C             63   SOUND_OUT     EQU P3.7
003C             64   CE_ADC        EQU P2.0
003C             65   MY_MOSI       EQU P2.1
003C             66   MY_MISO       EQU P2.2
003C             67   MY_SCLK       EQU P2.3
003C             68   
003C             69   UP_BUTTON          EQU P2.6 
003C             70   DOWN_BUTTON   EQU P2.5
003C             71   SELECT_BUTTON equ P2.4
003C             72   BACK_BUTTON   EQU #11110000B
003C             73   MASTER_START  EQU #10100000B 
003C             74   MASTER_STOP   EQU #10110000B
003C             75   
003C             76   ; For the 7-segment display
003C             77   SEGA equ P0.3  
003C             78   SEGB equ P0.5
003C             79   SEGC equ P0.7
003C             80   SEGD equ P4.4
003C             81   SEGE equ P4.5
003C             82   SEGF equ P0.4
003C             83   SEGG equ P0.6
003C             84   SEGP equ P2.7
003C             85   CA1  equ P0.1
003C             86   CA2  equ P0.0
003C             87   CA3  equ P0.2
003C             88   
003C             89   ; For the LCD
003C             90   LCD_RS equ P1.1
003C             91   LCD_RW equ P1.2
003C             92   LCD_E  equ P1.3
003C             93   LCD_D4 equ P3.2
003C             94   LCD_D5 equ P3.3
003C             95   LCD_D6 equ P3.4
003C             96   LCD_D7 equ P3.6
003C             97   
003C             98   ; pins to be used on the MPC 3008
003C             99   adc_zero                 equ #10000000B               ; LM355 temp sensor 
003C            100   adc_one                  equ #10010000B               ; thermocouple
003C            101   adc_two                  equ #10100000B               ;  start
003C            102   adc_three                equ #10110000B               ;  stop
003C            103   adc_four                 equ #11000000B               ;  x10
003C            104   adc_five                 equ #11010000B               ;  x100
003C            105   adc_six                  equ #11100000B               ; 
003C            106   adc_seven                equ #11110000B                           ; back
003C            107   
0030            108   DSEG at 0x30
0030            109   Count1ms:       ds 2 ; Used to determine when half second has passed
0032            110   Result:         ds 2 ; Temp from lm355
0034            111   Result_Thermo:  ds 2 ; Temp from Thermocoupler
0036            112   Result_Thermo_temp: ds 2
0038            113   ADC_Result:     ds 2 ; Temp from ADC channel 2
003A            114   
003A            115   BCD_temp:       ds 2 ; Used to diplay temp on the 7-segment display
003C            116   seconds:        ds 1
003D            117   polling_time:    ds 1
003E            118   x:              ds 4 ; Used in math32
0042            119   y:              ds 4 ; Used in math32
0046            120   bcd:            ds 5
004B            121   soaktime:       ds 2
004D            122   soaktemp:       ds 2
004F            123   reflowtime:     ds 2
0051            124   reflowtemp:     ds 2
0053            125   soaktemp3digit: ds 2
0055            126   reflow_state:   ds 1
0056            127   pwm:            ds 1
0057            128   temp:           ds 1
0058            129   sec:            ds 1 ; seconds variable for reflow FSM (to be incremented every second)
0059            130   cooled_temp:    ds 1
005A            131   ; 7-segment vars
005A            132   
005A            133   disp1:          ds 1 ; Least significant digit
005B            134   disp2:          ds 1
005C            135   disp3:          ds 1 ; Most significant digit
005D            136   seg_state:      ds 1 ; state of 7_seg fsm
005E            137   display_scratch: ds 1
005F            138   load_state:     ds 1
0060            139   load_circle:    ds 3
0063            140   ;sec_check: ds 1
0063            141   ;Beep Machine vars
0063            142   beep_state:     ds 1
0064            143   one_beep_count: ds 1
0065            144   six_beep_state: ds 1
0066            145   six_beep_count: ds 1
0067            146   average_count: ds 1
0068            147   Mean_temp: ds 2
006A            148   
006A            149   
0000            150   BSEG
0000            151   mf: dbit 1
0001            152   one_second_flag: dbit 1 
0002            153   polling_flag: dbit 1
0003            154   state4_flag: dbit 1
0004            155   load: dbit 1
0005            156   
0005            157   
003C            158   CSEG
003C            159                    ;                        1234567890123456
003C 20202020   160   Ramp_to_Soak:    db       '         Preheat', 0
     20202020
     20507265
     68656174
     00
004D 20202020   161   Soak:                    db   '         Soak   ', 0
     20202020
     20536F61
     6B202020
     00
005E 20202020   162   Ramp_to_Peak:    db       '         Ramp2pk', 0
     20202020
     2052616D
     7032706B
     00
006F 20202020   163   Reflow:                  db       '         Reflow ', 0
     20202020
     20526566
     6C6F7720
     00
0080 20202020   164   Cooling:                 db       '         Cooling', 0
     20202020
     20436F6F
     6C696E67
     00
0091 7300       165   secondsss:               db   's'                , 0
0093            166   ;                     1234567890123456    <- This helps determine the location of the counter
0093 57656C63   167   Welcome:                   db 'Welcome!        ', 0
     6F6D6521
     20202020
     20202020
     00
00A4 53656C65   168   Choose_option:     db 'Select option   ', 0
     6374206F
     7074696F
     6E202020
     00
00B5 50726573   169   Preset_menu_msg:  db 'Preset Profile ', 0
     65742050
     726F6669
     6C652000
00C5 43757374   170   Custom_menu_msg:  db 'Custom Profile ', 0
     6F6D2050
     726F6669
     6C652000
00D5 536F616B   171   Soak_temp:                 db 'Soak Temp       ', 0
     2054656D
     70202020
     20202020
     00
00E6 536F616B   172   Soak_time:                 db 'Soak Time       ', 0
     2054696D
     65202020
     20202020
     00
00F7 5265666C   173   Reflow_time:       db 'Reflow Time     ', 0
     6F772054
     696D6520
     20202020
     00
0108 5265666C   174   Reflow_temp:       db 'Reflow Temp     ', 0
     6F772054
     656D7020
     20202020
     00
0119 53414333   175   Pb_free_solder:    db 'SAC305 solder  ', 0
     30352073
     6F6C6465
     72202000
0129 50622D73   176   Pb_solder:                 db 'Pb-solder paste', 0
     6F6C6465
     72207061
     73746500
0139 53686868   177   Pizza_msg0:        db 'Shhh! No pizza  ', 0
     21204E6F
     2070697A
     7A612020
     00
014A 616C6C6F   178   Pizza_msg1:        db 'allowed in here.', 0
     77656420
     696E2068
     6572652E
     00
015B 70726F66   179   Profile_loaded:   db 'profile loaded  ', 0
     696C6520
     6C6F6164
     65642020
     00
016C 53797374   180   Is_ready:                  db 'System Ready    ', 0
     656D2052
     65616479
     20202020
     00
017D 50726573   181   Press_start:       db 'Press Start     ', 0
     73205374
     61727420
     20202020
     00
018E 78782020   182   Set_Value:                 db 'xx              ', 0
     20202020
     20202020
     20202020
     00
019F 20202020   183   Clear_Row:                 db '                ', 0
     20202020
     20202020
     20202020
     00
01B0 41542050   184   PRESETMENUMSG:     db 'AT PRESET MENU  ', 0
     52455345
     54204D45
     4E552020
     00
01C1 41542043   185   CUSTOMMENUMSG:     db 'AT CUSTOM MENU  ', 0
     5553544F
     4D204D45
     4E552020
     00
01D2 41726520   186   Are_you_sure:      db 'Are you sure?   ', 0
     796F7520
     73757265
     3F202020
     00
01E3 4572726F   187   Error_msg1:        db 'Error, profiles ', 0
     722C2070
     726F6669
     6C657320
     00
01F4 6E6F7420   188   Error_msg2:       db 'not loaded      ', 0
     6C6F6164
     65642020
     20202020
     00
0205 50726F63   189   Abort_string:      db 'Process aborted ', 0
     65737320
     61626F72
     74656420
     00
0216 57616974   190   Waiting_to_cool:  db 'Wait to cool    ', 0
     20746F20
     636F6F6C
     20202020
     00
0227 49535220   191   ISR_is_running:   db 'ISR is running  ', 0
     69732072
     756E6E69
     6E672020
     00
0238 5265666C   192   abort_msg:                 db 'Reflow Aborted! ', 0
     6F772041
     626F7274
     65642120
     00
0249 3F00       193   choose:                    db '?'                           , 0
024B C3DDCCDF   194   Ramp_to_Soak_jap:        db       11000011B, 11011101B, 11001100B, 11011111B, 11011010B,11000001B,11010100B,10110000B, 0
     DAC1D4B0
     00
0254 CCDFD8B0   195   Soak_jap:                        db   11001100B, 11011111B,11011000B,10110000B,11001011B,10110000B,11000100B, 0
     CBB0C400
025C D7DDCCDF   196   Ramp_to_Peak_jap:        db       11010111B, 11011101B,11001100B,11011111B,10100101B,11000000B,10110000B,10100101B,11001011B,11011111B,10110000B,10111001B, 0
     A5C0B0A5
     CBDFB0B9
     00
0269 DACCDBB0   197   Reflow_jap:              db       11011010B,11001100B, 11011011B, 10110000B, 0
     00
026E B9B0D8DD   198   Cooling_jap:             db       10111001B,10110000B,11011000B,11011101B,10111001B,11101001B, 0
     B9E900
0275 BEBADDC4   199   secondsss_jap:           db   10111110B,10111010B,11011101B,11000100B,11011110B, 0
     DE00
027B            200   ;                     1234567890123456    <- This helps determine the location of the counter
027B B3AAD9BA   201   Welcome_jap:               db 10110011B, 10101010B, 11011001B,10111010B,11010001B, 0
     D100
0281 BEDAB9C4   202   Choose_option_jap:         db 10111110B, 11011010B, 10111001B,11000100B,10100101B, 10110101B,11001100B, 11011111B,10111100B,11010110B,11011101B, 0
     A5B5CCDF
     BCD6DD00
028D CCDFD8B0   203   Preset_menu_msg_jap:  db 11001100B, 11011111B,11011000B,10110000B,10111110B,11000010B,11000100B,10100101B,11001100B,11011111B,11011011B,10110000B,11001100B,10110001B,10110010B,11011001B, 0
     BEC2C4A5
     CCDFDBB0
     CCB1B2D9
     00
029E B6BDC4D1   204   Custom_menu_msg_jap:  db 10110110B, 10111101B,11000100B,11010001B,10100101B,11001100B,11011111B,11011011B,10110000B,11001100B,10110001B,10110010B,11011001B, 0
     A5CCDFDB
     B0CCB1B2
     D900
02AC BFB0B9A5   205   Soak_temp_jap:             db 10111111B,10110000B,10111001B,10100101B,11000011B,11011101B,11001100B,11011111B,11011010B,11000001B,11010100B,10110000B, 0
     C3DDCCDF
     DAC1D4B0
     00
02B9 BFB0B9A5   206   Soak_time_jap:             db 10111111B,10110000B,10111001B,10100101B,10111001B,10110010B,11010001B, 0
     B9B2D100
02C1 DACCDBB0   207   Reflow_time_jap:           db 11011010B,11001100B,11011011B,10110000B,10100101B,10111001B,10110010B,11010001B, 0
     A5B9B2D1
     00
02CA DACCDBB0   208   Reflow_temp_jap:           db 11011010B,11001100B,11011011B,10110000B,10100101B,11000011B,11011101B, 11001100B,11011111B,11011010B,11000001B,11010100B,10110000B, 0
     A5C3DDCC
     DFDAC1D4
     B000
02D8 BFD9B9DE   209   Pb_free_solder_jap:        db 10111111B,11011001B,10111001B,11011110B,10110000B, 0
     B000
02DE CCDFCCDE   210   Pb_solder_jap:             db 11001100B, 11011111B,11001100B,11011110B,10100101B,10111111B,11011001B,10111001B,11011110B,10110000B,10100101B,11001101B,11011111B,10110000B,10111101B,11000100B, 0
     A5BFD9B9
     DEB0A5CD
     DFB0BDC4
     00
02EF C9B0A5CB   211   Pizza_msg0_jap:            db 11001001B,10110000B,10100101B,11001011B,11011111B,10110000B,11000010B,10110001B,10110000B, 0
     DFB0C2B1
     B000
02F9 B1D7B3C4   212   Pizza_msg1_jap:            db 10110001B,11010111B,10110011B,11000100B,11011110B,10100101B,10110010B,11011101B, 10100101B,11001011B,10110001B, 0
     DEA5B2DD
     A5CBB100
0305 CCDFDBB0   213   Profile_loaded_jap:   db 11001100B,11011111B,11011011B,10110000B,11001100B,10110001B,10110010B,11011001B,10100101B,11011011B,10110000B,11000011B,11011110B,10110010B,11000010B,11000100B,11011110B, 0
     CCB1B2D9
     A5DBB0C3
     DEB2C2C4
     DE00
0317 BCBDC3D1   214   Is_ready_jap:              db 10111100B,10111101B,11000011B,11010001B,10100101B,11000010B,11000011B,11011110B,10110010B,10110000B, 0
     A5C2C3DE
     B2B000
0322 CCDFDABD   215   Press_start_jap:           db 11001100B,11011111B,11011010B,10111101B,10100101B,10111101B,10111001B,10110000B,11000100B, 0
     A5BDB9B0
     C400
032C 78782020   216   Set_Value_jap:             db 'xx              ', 0
     20202020
     20202020
     20202020
     00
033D 20202020   217   Clear_Row_jap:             db '                ', 0
     20202020
     20202020
     20202020
     00
034E B1C2C4A5   218   PRESETMENUMSG_jap:         db 10110001B,11000010B,11000100B,10100101B,11001100B,11011111B,11011010B,10111110B,11011110B,11011101B,11000100B,10100101B,11000101B,11000110B,10101101B,10110000B, 0
     CCDFDABE
     DEDDC4A5
     C5C6ADB0
     00
035F B1C2C4A5   219   CUSTOMMENUMSG_jap:         db 10110001B,11000010B,11000100B,10100101B,10110110B,10111101B,11000100B,11010001B,10100101B,11000101B,11000110B,10101101B,10110000B, 0
     B6BDC4D1
     A5C5C6AD
     B000
036D B1B0A5AD   220   Are_you_sure_jap:          db 10110001B,10110000B,10100101B,10101101B,10110000B,10100101B,10111100B,10101101B,10110001B, 0
     B0A5BCAD
     B100
0377 AAD7B0A5   221   Error_msg1_jap:            db 10101010B,11010111B,10110000B,10100101B,11001100B,11011111B,11011011B,10110000B,11001100B,10110001B,10110010B,11011001B,10111101B,11011110B, 0
     CCDFDBB0
     CCB1B2D9
     BDDE00
0386 9CDD4C5A   222   Error_msg2_jap:       db 10011100B,11011101B,01001100B,01011010B,10111101B,00001011B,11001100B,00101011B,11011101B,01001100B, 0
     BD0BCC2B
     DD4C00
0391 CCBD0BBC   223   Abort_string_jap:          db 11001100B,10111101B,00001011B,10111100B,11011011B,01011010B,01111010B,11101100B,00001011B,11001100B,00101011B,010001100B, 0
     DB5A7AEC
     0BCC2B8C
     00
039E 9BAA0B4C   224   Waiting_to_cool_jap:  db 10011011B,10101010B,00001011B,01001100B,01011010B,01111110B,00001011B,01011010B,10011011B,00001011B,10011101B, 0
     5A7E0B5A
     9B0B9D00
03AA B1B2A5AA   225   ISR_is_running_jap:   db 10110001B,10110010B,10100101B,10101010B,10111101B,10100101B,10110001B,10110000B,10100101B,10110010B,10111101B,11011110B,10100101B,11010111B,11000110B,11011101B,10111001B,11011110B, 0
     BDA5B1B0
     A5B2BDDE
     A5D7C6DD
     B9DE00
03BD DACCDBB0   226   abort_msg_jap:             db 11011010B,11001100B,11011011B,10110000B,10100101B,10110001B,11001110B,11011110B,10110000B,11000011B,10110010B,11000100B,11011110B, 0
     A5B1CEDE
     B0C3B2C4
     DE00
03CB 3F00       227   choose_jap:                db '?'                           , 0
03CD            228   
03CD            229   
03CD 53746174   230   State_0: db 'State 0', 0
     65203000
03D5 53746174   231   State_1: db 'State 1', 0
     65203100
03DD            232   
03DD C0F9A4B0   233   HEX_7SEG: DB 0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90
     999282F8
     8090
03E7            234   
                236   $LIST
0449            238   
                240   	$LIST
04F7            242   
                546   $LIST
                244   $LIST
0767            246   
                248   $LIST
1AD9            250   
                252   $LIST
3889            254   
                256   $LIST
3C73            258   
                260   $LIST
4019            262   
                264   $LIST
4155            266   
4155            267   
4155            268   
4155            269   ;----------------------------------------MACRO LOCATION----------------------------------------------
4155            270   
4155            271   
4155            272   
4155            273   
4155            274   ;---------------------------------;
4155            275   ; Routine to initialize the ISR   ;
4155            276   ; for timer 0                     ;
4155            277   ;---------------------------------;
4155            278   Timer0_Init:
4155 E589       279            mov a, TMOD
4157 54F0       280            anl a, #0xf0 ; Clear the bits for timer 0
4159 4401       281            orl a, #0x01 ; Configure timer 0 as 16-timer
415B F589       282            mov TMOD, a
415D 758CEA     283            mov TH0, #high(TIMER0_RELOAD)
4160 758AE8     284            mov TL0, #low(TIMER0_RELOAD)
4163            285            ; Set autoreload value
4163 75F4EA     286            mov TIMER0_RELOAD_H, #high(TIMER0_RELOAD)
4166 75F2E8     287            mov TIMER0_RELOAD_L, #low(TIMER0_RELOAD)
4169            288            ; Enable the timer and interrupts
4169 D2A9       289       setb ET0  ; Enable timer 0 interrupt
416B            290            ;setb TR0  ; Start timer 0
416B 22         291            ret
416C            292   
416C            293   ;---------------------------------;
416C            294   ; ISR for timer 0.  Set to execute;
416C            295   ; every 1/4096Hz to generate a    ;
416C            296   ; 2048 Hz square wave at pin P3.7 ;
416C            297   ;---------------------------------;
416C            298   Timer0_ISR:
416C B2B7       299            cpl SOUND_OUT ; Connect speaker to P3.7!
416E 32         300            reti
416F            301            
416F            302   ;---------------------------------;
416F            303   ; Routine to initialize the ISR   ;
416F            304   ; for timer 1 in PWM mode         ;
416F            305   ;---------------------------------;
416F            306   
416F            307   Timer1_Init:
416F E589       308            mov a, TMOD
4171 540F       309            anl a, #00001111B       ;Clears timer 1 settings but keeps timer 0 settings
4173 4410       310            orl a, #00010000B       ;Gate = 0, TC1 = 0, mode = 01 (mode 1)
4175 F589       311            mov TMOD, a
4177            312            
4177 E591       313            mov a, TCONB            ;load TCONB for PWM settings
4179 5400       314            anl a, #00000000B       ;clear TCONB
417B 4480       315            orl a, #10000000B       ;Set PWM1 = 1
417D F591       316            mov TCONB, a
417F            317            
417F 758D00     318            mov TH1, #0             ;Current count value
4182 758B00     319            mov TL1, #0             ;Linear Prescaling
4185            320            
4185 75F500     321            mov TIMER1_RELOAD_H, #DUTY_0 ;Duty cycle percentage. Replace this value to change the duty cycle
4188 75F300     322            mov TIMER1_RELOAD_L, #0      ;Frequency scaling/adjust f_out = f_sys/(256 * (256 - TL))
418B            323            
418B D28E       324            setb TR1
418D 32         325            reti
418E            326   
418E            327   ;---------------------------------;
418E            328   ; Routine to initialize the ISR   ;
418E            329   ; for timer 2                     ;
418E            330   ;---------------------------------;
418E            331   Timer2_Init:
418E 75C800     332            mov T2CON, #0 ; Stop timer/counter.  Autoreload mode.
4191 75CDA9     333            mov TH2, #high(TIMER2_RELOAD)
4194 75CC9A     334            mov TL2, #low(TIMER2_RELOAD)
4197            335            ; Set the reload value
4197 75CBA9     336            mov RCAP2H, #high(TIMER2_RELOAD)
419A 75CA9A     337            mov RCAP2L, #low(TIMER2_RELOAD)
419D            338            ; Init One millisecond interrupt counter.  It is a 16-bit variable made with two 8-bit parts
419D E4         339            clr a
419E F530       340            mov Count1ms+0, a
41A0 F531       341            mov Count1ms+1, a
41A2 F53D       342            mov polling_time, a     ; a variable used to increment one second as well as 200 ms
41A4            343            ; Enable the timer and interrupts
41A4 D2AD       344       setb ET2  ; Enable timer 2 interrupt
41A6 D2CA       345       setb TR2  ; Enable timer 2
41A8 22         346            ret
41A9            347   
41A9            348   ;---------------------------------;
41A9            349   ; ISR for timer 2                 ;
41A9            350   ;---------------------------------;
41A9            351   Timer2_ISR:
41A9 C2CF       352            clr TF2  ; Timer 2 doesn't clear TF2 automatically. Do it in ISR
41AB            353   
41AB            354            ; The two registers used in the ISR must be saved in the stack
41AB C0E0       355            push acc
41AD C0D0       356            push psw
41AF            357            ; Increment the 16-bit one mili second counter
41AF            358                            ;       inc Count1ms+0    ; Increment the low 8-bits first
41AF            359                                    ;mov a, Count1ms+0
41AF            360                            ;       cjne a, #10h, Timer2_ISR_done
41AF            361                            ;       mov Count1ms+0, #0h
41AF 0530       362            inc Count1ms+0    ; Increment the low 8-bits first
41B1 E530       363            mov a, Count1ms+0 ; If the low 8-bits overflow, then increment high 8-bits
41B3 7002       364            jnz Inc_Done
41B5 0531       365            inc Count1ms+1
41B7            366            
41B7            367            ;Send_BCD(bcd)
41B7            368            Inc_Done:
41B7            369            ; Check if a second has passed
41B7            370   
41B7 E530       371            mov a, Count1ms+0
41B9 B46420     372            cjne a, #low(MILLISECOND_WAIT), Timer2_ISR_done ; Warning: this instruction changes the carry flag!
41BC E531       373            mov a, Count1ms+1
41BE B4001B     374            cjne a, #high(MILLISECOND_WAIT), Timer2_ISR_done
41C1            375            
41C1            376            ; 200 milliseconds have passed.  Set a flag so the main program knows
41C1            377   
41C1 D202       378            setb polling_flag
41C3            379            
41C3 300403     380            jnb load, no_load
41C6 1240A4     381            lcall load_sm
41C9            382   no_load:
41C9            383            
41C9            384            ; Reset to zero the milli-seconds counter, it is a 16-bit variable
41C9 E4         385            clr a
41CA F530       386            mov Count1ms+0, a
41CC F531       387            mov Count1ms+1, a
41CE            388            
41CE            389            ;Checks if 1 second has passed (by checking if Seconds_coeff*Millisecond_wait interrupts have occured)
41CE 053D       390            inc polling_time
41D0 E53D       391            mov a, polling_time
41D2 B40A07     392            cjne a, #Seconds_coeff, Timer2_ISR_done 
41D5            393            
41D5            394            
41D5 753D00     395            mov polling_time, #0x00
41D8 D201       396            setb one_second_flag
41DA            397            ; Increment the BCD seconds counter
41DA 053C       398            inc seconds
41DC            399   
41DC            400            
41DC            401   Timer2_ISR_done:
41DC 12403A     402            lcall seg_state_machine
41DF D0D0       403            pop psw
41E1 D0E0       404            pop acc
41E3 32         405            reti
41E4            406   
41E4            407   MainProgram:
41E4 75817F     408       mov SP, #7FH ; Set the stack pointer to the begining of idata
41E7            409   
41E7 124071     410            lcall seg_state_init
41EA 12409B     411            lcall load_sm_init
41ED 124155     412       lcall Timer0_Init
41F0 12416F     413            lcall Timer1_Init
41F3 12418E     414       lcall Timer2_Init
41F6 1203F6     415            lcall beep_machine_init
41F9 756705     416            mov average_count, #0x05
41FC 756800     417            mov Mean_temp+0, #0x00  
41FF 756900     418            mov Mean_temp+1, #0x00
4202            419            
4202 755500     420            mov reflow_state, #0x00
4205 75593C     421            mov cooled_temp, #60
4208            422       ; In case you decide to use the pins of P0, configure the port in bidirectional mode:
4208 75E600     423       mov P0M0, #0
420B 75E700     424       mov P0M1, #0
420E            425            
420E 758E11     426            mov AUXR, #00010001B ; Max memory.  P4.4 is a general purpose IO pin
4211            427   
4211 D2AF       428       setb EA   ; Enable Global interrupts
4213            429       
4213 12389F     430            lcall InitSerialPort
4216 1238CA     431            lcall INIT_SPI
4219 1204A3     432       lcall LCD_4BIT
421C            433            
421C            434   forever:
421C 123C0D     435            lcall GET_TEMP_DATA      ;This is the lab3 derivative loop that grabs the data from the thermocouple, 
421F 1203FF     436            lcall beep_state_machine
4222 023C73     437            ljmp reflow_state_machine       ; go do some stuff in the state_machine
4225 80F5       438       sjmp forever ; This is equivalent to 'forever: sjmp forever'
4227            439   
4227            440       
4227            441   EN
