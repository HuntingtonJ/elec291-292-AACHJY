0000              1   
                 -1   $MODLP51
0000              1   ;--------------------------------------------------------
0000              2   ; Special Function Registers
0000              3   ;--------------------------------------------------------
0000              4   ACC            DATA 0xe0
0000              5   B              DATA 0xf0
0000              6   PSW            DATA 0xd0
0000              7   SP             DATA 0x81
0000              8   SPX            DATA 0xef
0000              9   DPL            DATA 0x82
0000             10   DPH            DATA 0x83
0000             11   DPLB           DATA 0xd4
0000             12   DPHB           DATA 0xd5
0000             13   PAGE           DATA 0xf6
0000             14   AX             DATA 0xe1
0000             15   BX             DATA 0xf7
0000             16   DSPR           DATA 0xe2
0000             17   FIRD           DATA 0xe3
0000             18   MACL           DATA 0xe4
0000             19   MACH           DATA 0xe5
0000             20   PCON           DATA 0x87
0000             21   AUXR           DATA 0x8e
0000             22   AUXR1          DATA 0xa2
0000             23   DPCF           DATA 0xa1
0000             24   CKRL           DATA 0x97
0000             25   CKCKON0        DATA 0x8f
0000             26   CKCKON1        DATA 0xaf
0000             27   CKSEL          DATA 0x85
0000             28   CLKREG         DATA 0xae
0000             29   OSCCON         DATA 0x85
0000             30   IE             DATA 0xa8
0000             31   IEN0           DATA 0xa8
0000             32   IEN1           DATA 0xb1
0000             33   IPH0           DATA 0xb7
0000             34   IP             DATA 0xb8
0000             35   IPL0           DATA 0xb8
0000             36   IPH1           DATA 0xb3
0000             37   IPL1           DATA 0xb2
0000             38   P0             DATA 0x80
0000             39   P1             DATA 0x90
0000             40   P2             DATA 0xa0
0000             41   P3             DATA 0xb0
0000             42   P4             DATA 0xc0
0000             43   P0M0           DATA 0xe6
0000             44   P0M1           DATA 0xe7
0000             45   P1M0           DATA 0xd6
0000             46   P1M1           DATA 0xd7
0000             47   P2M0           DATA 0xce
0000             48   P2M1           DATA 0xcf
0000             49   P3M0           DATA 0xc6
0000             50   P3M1           DATA 0xc7
0000             51   P4M0           DATA 0xbe
0000             52   P4M1           DATA 0xbf
0000             53   SCON           DATA 0x98
0000             54   SBUF           DATA 0x99
0000             55   SADEN          DATA 0xb9
0000             56   SADDR          DATA 0xa9
0000             57   BDRCON         DATA 0x9b
0000             58   BRL            DATA 0x9a
0000             59   TCON           DATA 0x88
0000             60   TMOD           DATA 0x89
0000             61   TCONB          DATA 0x91
0000             62   TL0            DATA 0x8a
0000             63   TH0            DATA 0x8c
0000             64   TL1            DATA 0x8b
0000             65   TH1            DATA 0x8d
0000             66   RL0            DATA 0xf2
0000             67   RL1            DATA 0xf3
0000             68   RH0            DATA 0xf4
0000             69   RH1            DATA 0xf5
0000             70   WDTRST         DATA 0xa6
0000             71   WDTPRG         DATA 0xa7
0000             72   T2CON          DATA 0xc8
0000             73   T2MOD          DATA 0xc9
0000             74   RCAP2H         DATA 0xcb
0000             75   RCAP2L         DATA 0xca
0000             76   TH2            DATA 0xcd
0000             77   TL2            DATA 0xcc
0000             78   SPCON          DATA 0xc3
0000             79   SPSTA          DATA 0xc4
0000             80   SPDAT          DATA 0xc5
0000             81   SSCON          DATA 0x93
0000             82   SSCS           DATA 0x94
0000             83   SSDAT          DATA 0x95
0000             84   SSADR          DATA 0x96
0000             85   KBLS           DATA 0x9c
0000             86   KBE            DATA 0x9d
0000             87   KBF            DATA 0x9e
0000             88   KBMOD          DATA 0x9f
0000             89   BMSEL          DATA 0x92
0000             90   FCON           DATA 0xd2
0000             91   EECON          DATA 0xd2
0000             92   ACSRA          DATA 0xa3
0000             93   ACSRB          DATA 0xab
0000             94   AREF           DATA 0xbd
0000             95   DADC           DATA 0xa4
0000             96   DADI           DATA 0xa5
0000             97   DADL           DATA 0xac
0000             98   DADH           DATA 0xad
0000             99   CCON           DATA 0xd8
0000            100   CMOD           DATA 0xd9
0000            101   CL             DATA 0xe9
0000            102   CH             DATA 0xf9
0000            103   CCAPM0         DATA 0xda
0000            104   CCAPM1         DATA 0xdb
0000            105   CCAPM2         DATA 0xdc
0000            106   CCAPM3         DATA 0xdd
0000            107   CCAPM4         DATA 0xde
0000            108   CCAP0H         DATA 0xfa
0000            109   CCAP1H         DATA 0xfb
0000            110   CCAP2H         DATA 0xfc
0000            111   CCAP3H         DATA 0xfd
0000            112   CCAP4H         DATA 0xfe
0000            113   CCAP0L         DATA 0xea
0000            114   CCAP1L         DATA 0xeb
0000            115   CCAP2L         DATA 0xec
0000            116   CCAP3L         DATA 0xed
0000            117   CCAP4L         DATA 0xee
0000            118   ;--------------------------------------------------------
0000            119   ; special function bits
0000            120   ;--------------------------------------------------------
0000            121   P              BIT 0xd0
0000            122   F1             BIT 0xd1
0000            123   OV             BIT 0xd2
0000            124   RS0            BIT 0xd3
0000            125   RS1            BIT 0xd4
0000            126   F0             BIT 0xd5
0000            127   AC             BIT 0xd6
0000            128   CY             BIT 0xd7
0000            129   EX0            BIT 0xa8
0000            130   ET0            BIT 0xa9
0000            131   EX1            BIT 0xaa
0000            132   ET1            BIT 0xab
0000            133   ES             BIT 0xac
0000            134   ET2            BIT 0xad
0000            135   EC             BIT 0xae
0000            136   EA             BIT 0xaf
0000            137   PX0            BIT 0xb8
0000            138   PT0            BIT 0xb9
0000            139   PX1            BIT 0xba
0000            140   PT1            BIT 0xbb
0000            141   PS             BIT 0xbc
0000            142   PT2            BIT 0xbd
0000            143   IP0D           BIT 0xbf
0000            144   PPCL           BIT 0xbe
0000            145   PT2L           BIT 0xbd
0000            146   PLS            BIT 0xbc
0000            147   PT1L           BIT 0xbb
0000            148   PX1L           BIT 0xba
0000            149   PT0L           BIT 0xb9
0000            150   PX0L           BIT 0xb8
0000            151   RXD            BIT 0xb0
0000            152   TXD            BIT 0xb1
0000            153   INT0           BIT 0xb2
0000            154   INT1           BIT 0xb3
0000            155   T0             BIT 0xb4
0000            156   T1             BIT 0xb5
0000            157   WR             BIT 0xb6
0000            158   RD             BIT 0xb7
0000            159   RI             BIT 0x98
0000            160   TI             BIT 0x99
0000            161   RB8            BIT 0x9a
0000            162   TB8            BIT 0x9b
0000            163   REN            BIT 0x9c
0000            164   SM2            BIT 0x9d
0000            165   SM1            BIT 0x9e
0000            166   SM0            BIT 0x9f
0000            167   IT0            BIT 0x88
0000            168   IE0            BIT 0x89
0000            169   IT1            BIT 0x8a
0000            170   IE1            BIT 0x8b
0000            171   TR0            BIT 0x8c
0000            172   TF0            BIT 0x8d
0000            173   TR1            BIT 0x8e
0000            174   TF1            BIT 0x8f
0000            175   CP_RL2         BIT 0xc8
0000            176   C_T2           BIT 0xc9
0000            177   TR2            BIT 0xca
0000            178   EXEN2          BIT 0xcb
0000            179   TCLK           BIT 0xcc
0000            180   RCLK           BIT 0xcd
0000            181   EXF2           BIT 0xce
0000            182   TF2            BIT 0xcf
0000            183   CF             BIT 0xdf
0000            184   CR             BIT 0xde
0000            185   CCF4           BIT 0xdc
0000            186   CCF3           BIT 0xdb
0000            187   CCF2           BIT 0xda
0000            188   CCF1           BIT 0xd9
0000            189   CCF0           BIT 0xd8
0000              3   
0000              4   ; There is a couple of typos in MODLP51 in the definition of the timer 0/1 reload
0000              5   ; special function registers (SFRs), so:
0000              6   
0000              7   TIMER0_RELOAD_L DATA 0xf2
0000              8   TIMER1_RELOAD_L DATA 0xf3
0000              9   TIMER0_RELOAD_H DATA 0xf4
0000             10   TIMER1_RELOAD_H DATA 0xf5
0000             11   
0000             12   CLK              EQU 22118400 ; Microcontroller system crystal frequency in Hz
0000             13   TIMER0_RATE      EQU 4096     ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0000             14   TIMER0_RELOAD    EQU ((65536-(CLK/TIMER0_RATE)))
0000             15   TIMER2_RATE      EQU 1000     ; 1000Hz, for a timer tick of 1ms
0000             16   TIMER2_RELOAD    EQU ((65536-(CLK/TIMER2_RATE)))
0000             17   MAX_TEMP              EQU 250
0000             18   TIMEOUT_TIME     EQU 60
0000             19   BAUD             EQU 115200
0000             20   BRG_VAL          EQU (0x100-(CLK/(16*BAUD)))
0000             21   MILLISECOND_WAIT EQU 100                 ; how many milliseconds between temp samples, needs to be a number evenly divisible into 1000
0000             22   Seconds_coeff     equ (1000/MILLISECOND_WAIT)
0000             23   ABORT_TIME                EQU 60
0000             24   ABORT_TEMP                EQU 50
0000             25   
0000             26   DUTY_0           EQU 0
0000             27   DUTY_20          EQU 51   ;256 * 0.2
0000             28   DUTY_50          EQU 128  ;256 * 0.5
0000             29   DUTY_80          EQU 204  ;256 * 0.8
0000             30   DUTY_100         EQU 255
0000             31   
0000             32   org 0x0000
0000 02429F      33      ljmp MainProgram
0003             34   
0003             35   ; External interrupt 0 vector (not used in this code)
0003             36   org 0x0003
0003 32          37            reti
0004             38   
0004             39   ; Timer/Counter 0 overflow interrupt vector
000B             40   org 0x000B
000B 02421E      41            ljmp Timer0_ISR
000E             42   
000E             43   ; External interrupt 1 vector (not used in this code)
0013             44   org 0x0013
0013 32          45            reti
0014             46   
0014             47   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B             48   org 0x001B
001B 32          49            reti
001C             50   
001C             51   ; Serial port receive/transmit interrupt vector (not used in this code)
0023             52   org 0x0023 
0023 32          53            reti
0024             54            
0024             55   ; Timer/Counter 2 overflow interrupt vector
002B             56   org 0x002B
002B 02425B      57            ljmp Timer2_ISR
002E             58   
002E             59   ;Edge triggered keyboard interrupt vector
003B             60   org 0x003B
003B 32          61            reti
003C             62   
003C             63   ; These ’EQU’ must match the wiring between the microcontroller and ADC
003C             64   SOUND_OUT     EQU P3.7
003C             65   CE_ADC        EQU P2.0
003C             66   MY_MOSI       EQU P2.1
003C             67   MY_MISO       EQU P2.2
003C             68   MY_SCLK       EQU P2.3
003C             69   
003C             70   UP_BUTTON          EQU P2.6 
003C             71   DOWN_BUTTON   EQU P2.5
003C             72   SELECT_BUTTON equ P2.4
003C             73   BACK_BUTTON   EQU #11110000B
003C             74   MASTER_START  EQU #10100000B 
003C             75   MASTER_STOP   EQU #10110000B
003C             76   
003C             77   ; For the 7-segment display
003C             78   SEGA equ P0.3  
003C             79   SEGB equ P0.5
003C             80   SEGC equ P0.7
003C             81   SEGD equ P4.4
003C             82   SEGE equ P4.5
003C             83   SEGF equ P0.4
003C             84   SEGG equ P0.6
003C             85   SEGP equ P2.7
003C             86   CA1  equ P0.1
003C             87   CA2  equ P0.0
003C             88   CA3  equ P0.2
003C             89   
003C             90   ; For the LCD
003C             91   LCD_RS equ P1.1
003C             92   LCD_RW equ P1.2
003C             93   LCD_E  equ P1.3
003C             94   LCD_D4 equ P3.2
003C             95   LCD_D5 equ P3.3
003C             96   LCD_D6 equ P3.4
003C             97   LCD_D7 equ P3.6
003C             98   
003C             99   ; pins to be used on the MPC 3008
003C            100   adc_zero                 equ #10000000B               ; LM355 temp sensor 
003C            101   adc_one                  equ #10010000B               ; thermocouple
003C            102   adc_two                  equ #10100000B               ;  start
003C            103   adc_three                equ #10110000B               ;  stop
003C            104   adc_four                 equ #11000000B               ;  x10
003C            105   adc_five                 equ #11010000B               ;  x100
003C            106   adc_six                  equ #11100000B               ; 
003C            107   adc_seven                equ #11110000B                           ; back
003C            108   
0030            109   DSEG at 0x30
0030            110   Count1ms:       ds 2 ; Used to determine when half second has passed
0032            111   Result:         ds 2 ; Temp from lm355
0034            112   Result_Thermo:  ds 2 ; Temp from Thermocoupler
0036            113   Result_Thermo_temp: ds 2
0038            114   ADC_Result:     ds 2 ; Temp from ADC channel 2
003A            115   
003A            116   BCD_temp:       ds 2 ; Used to diplay temp on the 7-segment display
003C            117   seconds:        ds 1
003D            118   polling_time:    ds 1
003E            119   x:              ds 4 ; Used in math32
0042            120   y:              ds 4 ; Used in math32
0046            121   bcd:            ds 5
004B            122   soaktime:       ds 2
004D            123   soaktemp:       ds 2
004F            124   reflowtime:     ds 2
0051            125   reflowtemp:     ds 2
0053            126   soaktemp3digit: ds 2
0055            127   reflow_state:   ds 1
0056            128   pwm:            ds 1
0057            129   temp:           ds 1
0058            130   sec:            ds 1 ; seconds variable for reflow FSM (to be incremented every second)
0059            131   cooled_temp:    ds 1
005A            132   ; 7-segment vars
005A            133   
005A            134   disp1:          ds 1 ; Least significant digit
005B            135   disp2:          ds 1
005C            136   disp3:          ds 1 ; Most significant digit
005D            137   seg_state:      ds 1 ; state of 7_seg fsm
005E            138   display_scratch: ds 1
005F            139   load_state:     ds 1
0060            140   load_circle:    ds 3
0063            141   ;sec_check: ds 1
0063            142   ;Beep Machine vars
0063            143   beep_state:     ds 1
0064            144   one_beep_count: ds 1
0065            145   six_beep_state: ds 1
0066            146   six_beep_count: ds 1
0067            147   average_count: ds 1
0068            148   Mean_temp: ds 2
006A            149   
006A            150   cool_msg_count: ds 1;
006B            151   
006B            152   
0000            153   BSEG
0000            154   mf: dbit 1
0001            155   one_second_flag: dbit 1 
0002            156   polling_flag: dbit 1
0003            157   state4_flag: dbit 1
0004            158   load: dbit 1
0005            159   
0005            160   
003C            161   CSEG
003C            162                    ;                        1234567890123456
003C 20202020   163   Ramp_to_Soak:    db       '         Preheat', 0
     20202020
     20507265
     68656174
     00
004D 20202020   164   Soak:                    db   '         Soak   ', 0
     20202020
     20536F61
     6B202020
     00
005E 20202020   165   Ramp_to_Peak:    db       '         Ramp2pk', 0
     20202020
     2052616D
     7032706B
     00
006F 20202020   166   Reflow:                  db       '         Reflow ', 0
     20202020
     20526566
     6C6F7720
     00
0080 20202020   167   Cooling:                 db       '         Cooling', 0
     20202020
     20436F6F
     6C696E67
     00
0091 20504342   168   PCB_touch_ready:db   ' PCB touch ready', 0
     20746F75
     63682072
     65616479
     00
00A2 7300       169   secondsss:               db   's'                , 0
00A4            170   ;                     1234567890123456    <- This helps determine the location of the counter
00A4 57656C63   171   Welcome:                   db 'Welcome!        ', 0
     6F6D6521
     20202020
     20202020
     00
00B5 53656C65   172   Choose_option:     db 'Select option   ', 0
     6374206F
     7074696F
     6E202020
     00
00C6 50726573   173   Preset_menu_msg:  db 'Preset Profile ', 0
     65742050
     726F6669
     6C652000
00D6 43757374   174   Custom_menu_msg:  db 'Custom Profile ', 0
     6F6D2050
     726F6669
     6C652000
00E6 536F616B   175   Soak_temp:                 db 'Soak Temp       ', 0
     2054656D
     70202020
     20202020
     00
00F7 536F616B   176   Soak_time:                 db 'Soak Time       ', 0
     2054696D
     65202020
     20202020
     00
0108 5265666C   177   Reflow_time:       db 'Reflow Time     ', 0
     6F772054
     696D6520
     20202020
     00
0119 5265666C   178   Reflow_temp:       db 'Reflow Temp     ', 0
     6F772054
     656D7020
     20202020
     00
012A 53414333   179   Pb_free_solder:    db 'SAC305 solder  ', 0
     30352073
     6F6C6465
     72202000
013A 50622D73   180   Pb_solder:                 db 'Pb-solder paste', 0
     6F6C6465
     72207061
     73746500
014A 53686868   181   Pizza_msg0:        db 'Shhh! No pizza  ', 0
     21204E6F
     2070697A
     7A612020
     00
015B 616C6C6F   182   Pizza_msg1:        db 'allowed in here.', 0
     77656420
     696E2068
     6572652E
     00
016C 70726F66   183   Profile_loaded:   db 'profile loaded  ', 0
     696C6520
     6C6F6164
     65642020
     00
017D 53797374   184   Is_ready:                  db 'System Ready    ', 0
     656D2052
     65616479
     20202020
     00
018E 50726573   185   Press_start:       db 'Press Start     ', 0
     73205374
     61727420
     20202020
     00
019F 78782020   186   Set_Value:                 db 'xx              ', 0
     20202020
     20202020
     20202020
     00
01B0 20202020   187   Clear_Row:                 db '                ', 0
     20202020
     20202020
     20202020
     00
01C1 41542050   188   PRESETMENUMSG:     db 'AT PRESET MENU  ', 0
     52455345
     54204D45
     4E552020
     00
01D2 41542043   189   CUSTOMMENUMSG:     db 'AT CUSTOM MENU  ', 0
     5553544F
     4D204D45
     4E552020
     00
01E3 41726520   190   Are_you_sure:      db 'Are you sure?   ', 0
     796F7520
     73757265
     3F202020
     00
01F4 4572726F   191   Error_msg1:        db 'Error, profiles ', 0
     722C2070
     726F6669
     6C657320
     00
0205 6E6F7420   192   Error_msg2:       db 'not loaded      ', 0
     6C6F6164
     65642020
     20202020
     00
0216 50726F63   193   Abort_string:      db 'Process aborted ', 0
     65737320
     61626F72
     74656420
     00
0227 57616974   194   Waiting_to_cool:  db 'Wait to cool    ', 0
     20746F20
     636F6F6C
     20202020
     00
0238 49535220   195   ISR_is_running:   db 'ISR is running  ', 0
     69732072
     756E6E69
     6E672020
     00
0249 5265666C   196   abort_msg:                 db 'Reflow Aborted! ', 0
     6F772041
     626F7274
     65642120
     00
025A 3F00       197   choose:                    db '?'                           , 0
025C C3DDCCDF   198   Ramp_to_Soak_jap:        db       11000011B, 11011101B, 11001100B, 11011111B, 11011010B,11000001B,11010100B,10110000B, 0
     DAC1D4B0
     00
0265 CCDFD8B0   199   Soak_jap:                        db   11001100B, 11011111B,11011000B,10110000B,11001011B,10110000B,11000100B, 0
     CBB0C400
026D D7DDCCDF   200   Ramp_to_Peak_jap:        db       11010111B, 11011101B,11001100B,11011111B,10100101B,11000000B,10110000B,10100101B,11001011B,11011111B,10110000B,10111001B, 0
     A5C0B0A5
     CBDFB0B9
     00
027A DACCDBB0   201   Reflow_jap:              db       11011010B,11001100B, 11011011B, 10110000B, 0
     00
027F B9B0D8DD   202   Cooling_jap:             db       10111001B,10110000B,11011000B,11011101B,10111001B,11101001B, 0
     B9E900
0286 BEBADDC4   203   secondsss_jap:           db   10111110B,10111010B,11011101B,11000100B,11011110B, 0
     DE00
028C            204   ;                     1234567890123456    <- This helps determine the location of the counter
028C B3AAD9BA   205   Welcome_jap:               db 10110011B, 10101010B, 11011001B,10111010B,11010001B, 0
     D100
0292 BEDAB9C4   206   Choose_option_jap:         db 10111110B, 11011010B, 10111001B,11000100B,10100101B, 10110101B,11001100B, 11011111B,10111100B,11010110B,11011101B, 0
     A5B5CCDF
     BCD6DD00
029E CCDFD8B0   207   Preset_menu_msg_jap:  db 11001100B, 11011111B,11011000B,10110000B,10111110B,11000010B,11000100B,10100101B,11001100B,11011111B,11011011B,10110000B,11001100B,10110001B,10110010B,11011001B, 0
     BEC2C4A5
     CCDFDBB0
     CCB1B2D9
     00
02AF B6BDC4D1   208   Custom_menu_msg_jap:  db 10110110B, 10111101B,11000100B,11010001B,10100101B,11001100B,11011111B,11011011B,10110000B,11001100B,10110001B,10110010B,11011001B, 0
     A5CCDFDB
     B0CCB1B2
     D900
02BD BFB0B9A5   209   Soak_temp_jap:             db 10111111B,10110000B,10111001B,10100101B,11000011B,11011101B,11001100B,11011111B,11011010B,11000001B,11010100B,10110000B, 0
     C3DDCCDF
     DAC1D4B0
     00
02CA BFB0B9A5   210   Soak_time_jap:             db 10111111B,10110000B,10111001B,10100101B,10111001B,10110010B,11010001B, 0
     B9B2D100
02D2 DACCDBB0   211   Reflow_time_jap:           db 11011010B,11001100B,11011011B,10110000B,10100101B,10111001B,10110010B,11010001B, 0
     A5B9B2D1
     00
02DB DACCDBB0   212   Reflow_temp_jap:           db 11011010B,11001100B,11011011B,10110000B,10100101B,11000011B,11011101B, 11001100B,11011111B,11011010B,11000001B,11010100B,10110000B, 0
     A5C3DDCC
     DFDAC1D4
     B000
02E9 BFD9B9DE   213   Pb_free_solder_jap:        db 10111111B,11011001B,10111001B,11011110B,10110000B, 0
     B000
02EF CCDFCCDE   214   Pb_solder_jap:             db 11001100B, 11011111B,11001100B,11011110B,10100101B,10111111B,11011001B,10111001B,11011110B,10110000B,10100101B,11001101B,11011111B,10110000B,10111101B,11000100B, 0
     A5BFD9B9
     DEB0A5CD
     DFB0BDC4
     00
0300 C9B0A5CB   215   Pizza_msg0_jap:            db 11001001B,10110000B,10100101B,11001011B,11011111B,10110000B,11000010B,10110001B,10110000B, 0
     DFB0C2B1
     B000
030A B1D7B3C4   216   Pizza_msg1_jap:            db 10110001B,11010111B,10110011B,11000100B,11011110B,10100101B,10110010B,11011101B, 10100101B,11001011B,10110001B, 0
     DEA5B2DD
     A5CBB100
0316 CCDFDBB0   217   Profile_loaded_jap:   db 11001100B,11011111B,11011011B,10110000B,11001100B,10110001B,10110010B,11011001B,10100101B,11011011B,10110000B,11000011B,11011110B,10110010B,11000010B,11000100B,11011110B, 0
     CCB1B2D9
     A5DBB0C3
     DEB2C2C4
     DE00
0328 BCBDC3D1   218   Is_ready_jap:              db 10111100B,10111101B,11000011B,11010001B,10100101B,11000010B,11000011B,11011110B,10110010B,10110000B, 0
     A5C2C3DE
     B2B000
0333 CCDFDABD   219   Press_start_jap:           db 11001100B,11011111B,11011010B,10111101B,10100101B,10111101B,10111001B,10110000B,11000100B, 0
     A5BDB9B0
     C400
033D 78782020   220   Set_Value_jap:             db 'xx              ', 0
     20202020
     20202020
     20202020
     00
034E 20202020   221   Clear_Row_jap:             db '                ', 0
     20202020
     20202020
     20202020
     00
035F B1C2C4A5   222   PRESETMENUMSG_jap:         db 10110001B,11000010B,11000100B,10100101B,11001100B,11011111B,11011010B,10111110B,11011110B,11011101B,11000100B,10100101B,11000101B,11000110B,10101101B,10110000B, 0
     CCDFDABE
     DEDDC4A5
     C5C6ADB0
     00
0370 B1C2C4A5   223   CUSTOMMENUMSG_jap:         db 10110001B,11000010B,11000100B,10100101B,10110110B,10111101B,11000100B,11010001B,10100101B,11000101B,11000110B,10101101B,10110000B, 0
     B6BDC4D1
     A5C5C6AD
     B000
037E B1B0A5AD   224   Are_you_sure_jap:          db 10110001B,10110000B,10100101B,10101101B,10110000B,10100101B,10111100B,10101101B,10110001B, 0
     B0A5BCAD
     B100
0388 AAD7B0A5   225   Error_msg1_jap:            db 10101010B,11010111B,10110000B,10100101B,11001100B,11011111B,11011011B,10110000B,11001100B,10110001B,10110010B,11011001B,10111101B,11011110B, 0
     CCDFDBB0
     CCB1B2D9
     BDDE00
0397 9CDD4C5A   226   Error_msg2_jap:       db 10011100B,11011101B,01001100B,01011010B,10111101B,00001011B,11001100B,00101011B,11011101B,01001100B, 0
     BD0BCC2B
     DD4C00
03A2 CCBD0BBC   227   Abort_string_jap:          db 11001100B,10111101B,00001011B,10111100B,11011011B,01011010B,01111010B,11101100B,00001011B,11001100B,00101011B,010001100B, 0
     DB5A7AEC
     0BCC2B8C
     00
03AF 9BAA0B4C   228   Waiting_to_cool_jap:  db 10011011B,10101010B,00001011B,01001100B,01011010B,01111110B,00001011B,01011010B,10011011B,00001011B,10011101B, 0
     5A7E0B5A
     9B0B9D00
03BB B1B2A5AA   229   ISR_is_running_jap:   db 10110001B,10110010B,10100101B,10101010B,10111101B,10100101B,10110001B,10110000B,10100101B,10110010B,10111101B,11011110B,10100101B,11010111B,11000110B,11011101B,10111001B,11011110B, 0
     BDA5B1B0
     A5B2BDDE
     A5D7C6DD
     B9DE00
03CE DACCDBB0   230   abort_msg_jap:             db 11011010B,11001100B,11011011B,10110000B,10100101B,10110001B,11001110B,11011110B,10110000B,11000011B,10110010B,11000100B,11011110B, 0
     A5B1CEDE
     B0C3B2C4
     DE00
03DC 3F00       231   choose_jap:                db '?'                           , 0
03DE            232   
03DE            233   
03DE 53746174   234   State_0: db 'State 0', 0
     65203000
03E6 53746174   235   State_1: db 'State 1', 0
     65203100
03EE            236   
03EE C0F9A4B0   237   HEX_7SEG: DB 0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90
     999282F8
     8090
03F8            238   
                240   $LIST
045A            242   
                244   	$LIST
0508            246   
                546   $LIST
                248   $LIST
0778            250   
                252   $LIST
1B14            254   
                256   $LIST
38C4            258   
                260   $LIST
3CAE            262   
                264   $LIST
40CB            266   
                268   $LIST
4207            270   
4207            271   
4207            272   
4207            273   ;----------------------------------------MACRO LOCATION----------------------------------------------
4207            274   
4207            275   
4207            276   
4207            277   
4207            278   ;---------------------------------;
4207            279   ; Routine to initialize the ISR   ;
4207            280   ; for timer 0                     ;
4207            281   ;---------------------------------;
4207            282   Timer0_Init:
4207 E589       283            mov a, TMOD
4209 54F0       284            anl a, #0xf0 ; Clear the bits for timer 0
420B 4401       285            orl a, #0x01 ; Configure timer 0 as 16-timer
420D F589       286            mov TMOD, a
420F 758CEA     287            mov TH0, #high(TIMER0_RELOAD)
4212 758AE8     288            mov TL0, #low(TIMER0_RELOAD)
4215            289            ; Set autoreload value
4215 75F4EA     290            mov TIMER0_RELOAD_H, #high(TIMER0_RELOAD)
4218 75F2E8     291            mov TIMER0_RELOAD_L, #low(TIMER0_RELOAD)
421B            292            ; Enable the timer and interrupts
421B D2A9       293       setb ET0  ; Enable timer 0 interrupt
421D            294            ;setb TR0  ; Start timer 0
421D 22         295            ret
421E            296   
421E            297   ;---------------------------------;
421E            298   ; ISR for timer 0.  Set to execute;
421E            299   ; every 1/4096Hz to generate a    ;
421E            300   ; 2048 Hz square wave at pin P3.7 ;
421E            301   ;---------------------------------;
421E            302   Timer0_ISR:
421E B2B7       303            cpl SOUND_OUT ; Connect speaker to P3.7!
4220 32         304            reti
4221            305            
4221            306   ;---------------------------------;
4221            307   ; Routine to initialize the ISR   ;
4221            308   ; for timer 1 in PWM mode         ;
4221            309   ;---------------------------------;
4221            310   
4221            311   Timer1_Init:
4221 E589       312            mov a, TMOD
4223 540F       313            anl a, #00001111B       ;Clears timer 1 settings but keeps timer 0 settings
4225 4410       314            orl a, #00010000B       ;Gate = 0, TC1 = 0, mode = 01 (mode 1)
4227 F589       315            mov TMOD, a
4229            316            
4229 E591       317            mov a, TCONB            ;load TCONB for PWM settings
422B 5400       318            anl a, #00000000B       ;clear TCONB
422D 4480       319            orl a, #10000000B       ;Set PWM1 = 1
422F F591       320            mov TCONB, a
4231            321            
4231 758D00     322            mov TH1, #0             ;Current count value
4234 758B00     323            mov TL1, #0             ;Linear Prescaling
4237            324            
4237 75F500     325            mov TIMER1_RELOAD_H, #DUTY_0 ;Duty cycle percentage. Replace this value to change the duty cycle
423A 75F300     326            mov TIMER1_RELOAD_L, #0      ;Frequency scaling/adjust f_out = f_sys/(256 * (256 - TL))
423D            327            
423D D28E       328            setb TR1
423F 32         329            reti
4240            330   
4240            331   ;---------------------------------;
4240            332   ; Routine to initialize the ISR   ;
4240            333   ; for timer 2                     ;
4240            334   ;---------------------------------;
4240            335   Timer2_Init:
4240 75C800     336            mov T2CON, #0 ; Stop timer/counter.  Autoreload mode.
4243 75CDA9     337            mov TH2, #high(TIMER2_RELOAD)
4246 75CC9A     338            mov TL2, #low(TIMER2_RELOAD)
4249            339            ; Set the reload value
4249 75CBA9     340            mov RCAP2H, #high(TIMER2_RELOAD)
424C 75CA9A     341            mov RCAP2L, #low(TIMER2_RELOAD)
424F            342            ; Init One millisecond interrupt counter.  It is a 16-bit variable made with two 8-bit parts
424F E4         343            clr a
4250 F530       344            mov Count1ms+0, a
4252 F531       345            mov Count1ms+1, a
4254 F53D       346            mov polling_time, a     ; a variable used to increment one second as well as 200 ms
4256            347            ; Enable the timer and interrupts
4256 D2AD       348       setb ET2  ; Enable timer 2 interrupt
4258 D2CA       349       setb TR2  ; Enable timer 2
425A 22         350            ret
425B            351   
425B            352   ;---------------------------------;
425B            353   ; ISR for timer 2                 ;
425B            354   ;---------------------------------;
425B            355   Timer2_ISR:
425B C2CF       356            clr TF2  ; Timer 2 doesn't clear TF2 automatically. Do it in ISR
425D            357   
425D            358            ; The two registers used in the ISR must be saved in the stack
425D C0E0       359            push acc
425F C0D0       360            push psw
4261            361            ; Increment the 16-bit one mili second counter
4261            362                            ;       inc Count1ms+0    ; Increment the low 8-bits first
4261            363                                    ;mov a, Count1ms+0
4261            364                            ;       cjne a, #10h, Timer2_ISR_done
4261            365                            ;       mov Count1ms+0, #0h
4261 0530       366            inc Count1ms+0    ; Increment the low 8-bits first
4263 E530       367            mov a, Count1ms+0 ; If the low 8-bits overflow, then increment high 8-bits
4265 7002       368            jnz Inc_Done
4267 0531       369            inc Count1ms+1
4269            370            
4269            371            ;Send_BCD(bcd)
4269            372            Inc_Done:
4269            373            ; Check if a second has passed
4269            374   
4269 E530       375            mov a, Count1ms+0
426B B46429     376            cjne a, #low(MILLISECOND_WAIT), Timer2_ISR_done ; Warning: this instruction changes the carry flag!
426E E531       377            mov a, Count1ms+1
4270 B40024     378            cjne a, #high(MILLISECOND_WAIT), Timer2_ISR_done
4273            379            
4273            380            ; 200 milliseconds have passed.  Set a flag so the main program knows
4273            381   
4273 D202       382            setb polling_flag
4275            383            
4275 300403     384            jnb load, no_load
4278 124156     385            lcall load_sm
427B            386   no_load:
427B            387            
427B            388            ; Reset to zero the milli-seconds counter, it is a 16-bit variable
427B E4         389            clr a
427C F530       390            mov Count1ms+0, a
427E F531       391            mov Count1ms+1, a
4280            392            
4280            393            ;Checks if 1 second has passed (by checking if Seconds_coeff*Millisecond_wait interrupts have occured)
4280 053D       394            inc polling_time
4282 E53D       395            mov a, polling_time
4284 B40A10     396            cjne a, #Seconds_coeff, Timer2_ISR_done 
4287            397            
4287            398            
4287 753D00     399            mov polling_time, #0x00
428A D201       400            setb one_second_flag
428C            401            ; Increment the BCD seconds counter
428C 053C       402            inc seconds
428E E56A       403            mov a, cool_msg_count
4290 B40002     404            cjne a, #0, dec_cool_msg
4293 8002       405            sjmp Timer2_ISR_done
4295            406            
4295            407            dec_cool_msg:
4295 156A       408                    dec cool_msg_count
4297            409   
4297            410            
4297            411   Timer2_ISR_done:
4297 1240EC     412            lcall seg_state_machine
429A D0D0       413            pop psw
429C D0E0       414            pop acc
429E 32         415            reti
429F            416   
429F            417   MainProgram:
429F 75817F     418       mov SP, #7FH ; Set the stack pointer to the begining of idata
42A2            419   
42A2 124123     420            lcall seg_state_init
42A5 12414D     421            lcall load_sm_init
42A8 124207     422       lcall Timer0_Init
42AB 124221     423            lcall Timer1_Init
42AE 124240     424       lcall Timer2_Init
42B1 120407     425            lcall beep_machine_init
42B4 75670A     426            mov average_count, #0x0a
42B7 756800     427            mov Mean_temp+0, #0x00  
42BA 756900     428            mov Mean_temp+1, #0x00
42BD            429            
42BD 755500     430            mov reflow_state, #0x00
42C0 75593C     431            mov cooled_temp, #60
42C3 756A00     432            mov cool_msg_count, #0
42C6            433       ; In case you decide to use the pins of P0, configure the port in bidirectional mode:
42C6 75E600     434       mov P0M0, #0
42C9 75E700     435       mov P0M1, #0
42CC            436            
42CC 758E11     437            mov AUXR, #00010001B ; Max memory.  P4.4 is a general purpose IO pin
42CF            438   
42CF D2AF       439       setb EA   ; Enable Global interrupts
42D1            440       
42D1 1238DA     441            lcall InitSerialPort
42D4 123905     442            lcall INIT_SPI
42D7 1204B4     443       lcall LCD_4BIT
42DA            444            
42DA            445   forever:
42DA 123C48     446            lcall GET_TEMP_DATA      ;This is the lab3 derivative loop that grabs the data from the thermocouple, 
42DD 120410     447            lcall beep_state_machine
42E0 023CAE     448            ljmp reflow_state_machine       ; go do some stuff in the state_machine
42E3 80F5       449       sjmp forever ; This is equivalent to 'forever: sjmp forever'
42E5            450   
42E5            451       
42E5            452   EN
