0000              1   ; Code for menu options
0000              2   
                 -1   $MODLP51
0000              1   ;--------------------------------------------------------
0000              2   ; Special Function Registers
0000              3   ;--------------------------------------------------------
0000              4   ACC            DATA 0xe0
0000              5   B              DATA 0xf0
0000              6   PSW            DATA 0xd0
0000              7   SP             DATA 0x81
0000              8   SPX            DATA 0xef
0000              9   DPL            DATA 0x82
0000             10   DPH            DATA 0x83
0000             11   DPLB           DATA 0xd4
0000             12   DPHB           DATA 0xd5
0000             13   PAGE           DATA 0xf6
0000             14   AX             DATA 0xe1
0000             15   BX             DATA 0xf7
0000             16   DSPR           DATA 0xe2
0000             17   FIRD           DATA 0xe3
0000             18   MACL           DATA 0xe4
0000             19   MACH           DATA 0xe5
0000             20   PCON           DATA 0x87
0000             21   AUXR           DATA 0x8e
0000             22   AUXR1          DATA 0xa2
0000             23   DPCF           DATA 0xa1
0000             24   CKRL           DATA 0x97
0000             25   CKCKON0        DATA 0x8f
0000             26   CKCKON1        DATA 0xaf
0000             27   CKSEL          DATA 0x85
0000             28   CLKREG         DATA 0xae
0000             29   OSCCON         DATA 0x85
0000             30   IE             DATA 0xa8
0000             31   IEN0           DATA 0xa8
0000             32   IEN1           DATA 0xb1
0000             33   IPH0           DATA 0xb7
0000             34   IP             DATA 0xb8
0000             35   IPL0           DATA 0xb8
0000             36   IPH1           DATA 0xb3
0000             37   IPL1           DATA 0xb2
0000             38   P0             DATA 0x80
0000             39   P1             DATA 0x90
0000             40   P2             DATA 0xa0
0000             41   P3             DATA 0xb0
0000             42   P4             DATA 0xc0
0000             43   P0M0           DATA 0xe6
0000             44   P0M1           DATA 0xe7
0000             45   P1M0           DATA 0xd6
0000             46   P1M1           DATA 0xd7
0000             47   P2M0           DATA 0xce
0000             48   P2M1           DATA 0xcf
0000             49   P3M0           DATA 0xc6
0000             50   P3M1           DATA 0xc7
0000             51   P4M0           DATA 0xbe
0000             52   P4M1           DATA 0xbf
0000             53   SCON           DATA 0x98
0000             54   SBUF           DATA 0x99
0000             55   SADEN          DATA 0xb9
0000             56   SADDR          DATA 0xa9
0000             57   BDRCON         DATA 0x9b
0000             58   BRL            DATA 0x9a
0000             59   TCON           DATA 0x88
0000             60   TMOD           DATA 0x89
0000             61   TCONB          DATA 0x91
0000             62   TL0            DATA 0x8a
0000             63   TH0            DATA 0x8c
0000             64   TL1            DATA 0x8b
0000             65   TH1            DATA 0x8d
0000             66   RL0            DATA 0xf2
0000             67   RL1            DATA 0xf3
0000             68   RH0            DATA 0xf4
0000             69   RH1            DATA 0xf5
0000             70   WDTRST         DATA 0xa6
0000             71   WDTPRG         DATA 0xa7
0000             72   T2CON          DATA 0xc8
0000             73   T2MOD          DATA 0xc9
0000             74   RCAP2H         DATA 0xcb
0000             75   RCAP2L         DATA 0xca
0000             76   TH2            DATA 0xcd
0000             77   TL2            DATA 0xcc
0000             78   SPCON          DATA 0xc3
0000             79   SPSTA          DATA 0xc4
0000             80   SPDAT          DATA 0xc5
0000             81   SSCON          DATA 0x93
0000             82   SSCS           DATA 0x94
0000             83   SSDAT          DATA 0x95
0000             84   SSADR          DATA 0x96
0000             85   KBLS           DATA 0x9c
0000             86   KBE            DATA 0x9d
0000             87   KBF            DATA 0x9e
0000             88   KBMOD          DATA 0x9f
0000             89   BMSEL          DATA 0x92
0000             90   FCON           DATA 0xd2
0000             91   EECON          DATA 0xd2
0000             92   ACSRA          DATA 0xa3
0000             93   ACSRB          DATA 0xab
0000             94   AREF           DATA 0xbd
0000             95   DADC           DATA 0xa4
0000             96   DADI           DATA 0xa5
0000             97   DADL           DATA 0xac
0000             98   DADH           DATA 0xad
0000             99   CCON           DATA 0xd8
0000            100   CMOD           DATA 0xd9
0000            101   CL             DATA 0xe9
0000            102   CH             DATA 0xf9
0000            103   CCAPM0         DATA 0xda
0000            104   CCAPM1         DATA 0xdb
0000            105   CCAPM2         DATA 0xdc
0000            106   CCAPM3         DATA 0xdd
0000            107   CCAPM4         DATA 0xde
0000            108   CCAP0H         DATA 0xfa
0000            109   CCAP1H         DATA 0xfb
0000            110   CCAP2H         DATA 0xfc
0000            111   CCAP3H         DATA 0xfd
0000            112   CCAP4H         DATA 0xfe
0000            113   CCAP0L         DATA 0xea
0000            114   CCAP1L         DATA 0xeb
0000            115   CCAP2L         DATA 0xec
0000            116   CCAP3L         DATA 0xed
0000            117   CCAP4L         DATA 0xee
0000            118   ;--------------------------------------------------------
0000            119   ; special function bits
0000            120   ;--------------------------------------------------------
0000            121   P              BIT 0xd0
0000            122   F1             BIT 0xd1
0000            123   OV             BIT 0xd2
0000            124   RS0            BIT 0xd3
0000            125   RS1            BIT 0xd4
0000            126   F0             BIT 0xd5
0000            127   AC             BIT 0xd6
0000            128   CY             BIT 0xd7
0000            129   EX0            BIT 0xa8
0000            130   ET0            BIT 0xa9
0000            131   EX1            BIT 0xaa
0000            132   ET1            BIT 0xab
0000            133   ES             BIT 0xac
0000            134   ET2            BIT 0xad
0000            135   EC             BIT 0xae
0000            136   EA             BIT 0xaf
0000            137   PX0            BIT 0xb8
0000            138   PT0            BIT 0xb9
0000            139   PX1            BIT 0xba
0000            140   PT1            BIT 0xbb
0000            141   PS             BIT 0xbc
0000            142   PT2            BIT 0xbd
0000            143   IP0D           BIT 0xbf
0000            144   PPCL           BIT 0xbe
0000            145   PT2L           BIT 0xbd
0000            146   PLS            BIT 0xbc
0000            147   PT1L           BIT 0xbb
0000            148   PX1L           BIT 0xba
0000            149   PT0L           BIT 0xb9
0000            150   PX0L           BIT 0xb8
0000            151   RXD            BIT 0xb0
0000            152   TXD            BIT 0xb1
0000            153   INT0           BIT 0xb2
0000            154   INT1           BIT 0xb3
0000            155   T0             BIT 0xb4
0000            156   T1             BIT 0xb5
0000            157   WR             BIT 0xb6
0000            158   RD             BIT 0xb7
0000            159   RI             BIT 0x98
0000            160   TI             BIT 0x99
0000            161   RB8            BIT 0x9a
0000            162   TB8            BIT 0x9b
0000            163   REN            BIT 0x9c
0000            164   SM2            BIT 0x9d
0000            165   SM1            BIT 0x9e
0000            166   SM0            BIT 0x9f
0000            167   IT0            BIT 0x88
0000            168   IE0            BIT 0x89
0000            169   IT1            BIT 0x8a
0000            170   IE1            BIT 0x8b
0000            171   TR0            BIT 0x8c
0000            172   TF0            BIT 0x8d
0000            173   TR1            BIT 0x8e
0000            174   TF1            BIT 0x8f
0000            175   CP_RL2         BIT 0xc8
0000            176   C_T2           BIT 0xc9
0000            177   TR2            BIT 0xca
0000            178   EXEN2          BIT 0xcb
0000            179   TCLK           BIT 0xcc
0000            180   RCLK           BIT 0xcd
0000            181   EXF2           BIT 0xce
0000            182   TF2            BIT 0xcf
0000            183   CF             BIT 0xdf
0000            184   CR             BIT 0xde
0000            185   CCF4           BIT 0xdc
0000            186   CCF3           BIT 0xdb
0000            187   CCF2           BIT 0xda
0000            188   CCF1           BIT 0xd9
0000            189   CCF0           BIT 0xd8
0000              4   
0000              5   ; There is a couple of typos in MODLP51 in the definition of the timer 0/1 reload
0000              6   ; special function registers (SFRs), so:
0000              7   
0000              8   TIMER0_RELOAD_L DATA 0xf2
0000              9   TIMER1_RELOAD_L DATA 0xf3
0000             10   TIMER0_RELOAD_H DATA 0xf4
0000             11   TIMER1_RELOAD_H DATA 0xf5
0000             12   
0000             13   CLK           EQU 22118400 ; Microcontroller system crystal frequency in Hz
0000             14   TIMER0_RATE   EQU 4096     ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0000             15   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0000             16   TIMER2_RATE   EQU 1000     ; 1000Hz, for a timer tick of 1ms
0000             17   TIMER2_RELOAD EQU ((65536-(CLK/TIMER2_RATE)))
0000             18   MAX_TEMP           EQU 250
0000             19   TIMEOUT_TIME  EQU 60
0000             20   BAUD equ 115200
0000             21   BRG_VAL equ (0x100-(CLK/(16*BAUD)))
0000             22   
0000             23   
0000             24   org 0x0000
0000 02021A      25      ljmp Main_Menu_Program
0003             26   
0003             27   ; These ’EQU’ must match the wiring between the microcontroller and ADC
0003             28   SOUND_OUT   EQU P3.7
0003             29   CE_ADC      EQU P2.4
0003             30   MY_MOSI     EQU P2.5
0003             31   MY_MISO     EQU P2.6
0003             32   MY_SCLK     EQU P2.7
0003             33   UP_BUTTON        EQU P0.0
0003             34   DOWN_BUTTON EQU P0.1
0003             35   SELECT_BUTTON EQU P0.2
0003             36   NEXT_BUTTON EQU P0.3
0003             37   BACK_BUTTON EQU p0.4
0003             38   MASTER_START_STOP equ p0.5
0003             39   
0003             40   
0030             41   DSEG at 0x30
0030             42   Count1ms:      ds 2 ; Used to determine when half second has passed
0032             43   Result: ds 2
0034             44   x:      ds 4
0038             45   y:      ds 4
003C             46   bcd:    ds 5
0041             47   soaktime: ds 2
0043             48   soaktemp: ds 2
0045             49   reflowtime: ds 2
0047             50   reflowtemp: ds 2
0049             51   soaktemp3digit: ds 2
004B             52   
004B             53   
0000             54   BSEG
0000             55   mf: dbit 1
0001             56   
0003             57   CSEG
0003             58   LCD_RS equ P1.1
0003             59   LCD_RW equ P1.2
0003             60   LCD_E  equ P1.3
0003             61   LCD_D4 equ P3.2
0003             62   LCD_D5 equ P3.3
0003             63   LCD_D6 equ P3.4
0003             64   LCD_D7 equ P3.5
0003             65   
                 67   	$LIST
00B1             69   
00B1             70   ;$NOLIST
00B1             71   ;$include(menu_code.inc) 
00B1             72   ;$LIST
00B1             73   
00B1             74   ;                     1234567890123456    <- This helps determine the location of the counter
00B1 57656C63    75   Welcome:                   db 'Welcome!        ', 0
     6F6D6521
     20202020
     20202020
     00
00C2 53656C65    76   Choose_option:     db 'Select option   ', 0
     6374206F
     7074696F
     6E202020
     00
00D3 50726573    77   Preset_menu_msg:  db 'Preset Profile  ', 0
     65742050
     726F6669
     6C652020
     00
00E4 43757374    78   Custom_menu_msg:  db 'Custom Profile  ', 0
     6F6D2050
     726F6669
     6C652020
     00
00F5 536F616B    79   Soak_temp:                 db 'Soak Temp       ', 0
     2054656D
     70202020
     20202020
     00
0106 536F616B    80   Soak_time:                 db 'Soak Time       ', 0
     2054696D
     65202020
     20202020
     00
0117 5265666C    81   Reflow_time:       db 'Reflow Time     ', 0
     6F772054
     696D6520
     20202020
     00
0128 5265666C    82   Reflow_temp:       db 'Reflow Temp     ', 0
     6F772054
     656D7020
     20202020
     00
0139 53414333    83   Pb_free_solder:    db 'SAC305 solder   ', 0
     30352073
     6F6C6465
     72202020
     00
014A 50622D73    84   Pb_solder:                 db 'Pb-solder paste ', 0
     6F6C6465
     72207061
     73746520
     00
015B 53686868    85   Pizza_msg0:        db 'Shhh! No pizza  ', 0
     21204E6F
     2070697A
     7A612020
     00
016C 616C6C6F    86   Pizza_msg1:        db 'allowed in here.', 0
     77656420
     696E2068
     6572652E
     00
017D 70726F66    87   Profile_loaded:   db 'profile loaded  ', 0
     696C6520
     6C6F6164
     65642020
     00
018E 53797374    88   Is_ready:                  db 'System Ready    ', 0
     656D2052
     65616479
     20202020
     00
019F 50726573    89   Press_start:       db 'Press Start     ', 0
     73205374
     61727420
     20202020
     00
01B0 78782020    90   Set_Value:                 db 'xx              ', 0
     20202020
     20202020
     20202020
     00
01C1 20202020    91   Clear_Row:                 db '                ', 0
     20202020
     20202020
     20202020
     00
01D2 41542050    92   PRESETMENUMSG:     db 'AT PRESET MENU  ', 0
     52455345
     54204D45
     4E552020
     00
01E3 41542043    93   CUSTOMMENUMSG:     db 'AT CUSTOM MENU  ', 0
     5553544F
     4D204D45
     4E552020
     00
01F4 41726520    94   Are_you_sure:      db 'Are you sure?   ', 0
     796F7520
     73757265
     3F202020
     00
0205             95   
0205             96   WaitHalfSec:
0205 7A2D        97       mov R2, #45
0207 79FA        98   Wait3: mov R1, #250
0209 78A6        99   Wait2: mov R0, #166
020B D8FE       100   Wait1: djnz R0, Wait1 ; 3 cycles->3*45.21123ns*166=22.51519us
020D D9FA       101       djnz R1, Wait2 ; 22.51519us*250=5.629ms
020F DAF6       102       djnz R2, Wait3 ; 5.629ms*89=0.5s (approximately)
0211 22         103       ret
0212            104   
0212            105   ;-----------------------------
0212            106   ;Button Pressed macro 
0212            107   ;if button (input %0) is pressed, go to specified location (input %1), if not, go to next instruction
0212            108   ;-----------------------------
0212            109   putchar:
0212 3099FD     110       jnb TI, putchar
0215 C299       111       clr TI
0217 F599       112       mov SBUF, a
0219 22         113       ret
021A            114   
                115   button_jmp mac	
                116   jb %0, endhere_%M
                117   Wait_Milli_Seconds(#50)
                118   jb %0, endhere_%M
                119   jnb %0, $
                120   ljmp %1
                121   
                122   endhere_%M: 			
                123   	endmac
021A            124   
021A            125   Main_Menu_Program:
021A 75817F     126            mov SP, #7FH
021D            127            ;Configure port 0/1 in bi-directional mode
021D 75E600     128            mov P0M0, #0
0220 75E700     129       mov P0M1, #0
0223 12005D     130       lcall LCD_4BIT
0226            131            ;Set all vars initally to zero
0226 754100     132            mov soaktime, #0x00
0229 754300     133            mov soaktemp, #0x00
022C 754500     134            mov reflowtime, #0x00
022F 754700     135            mov reflowtemp, #0x00
0232            136            ;display initial menu messages
0232            137   
0232 C0E0       138            push acc
0234 7404       138            mov a, #4
0236 14         138            dec a
0237 120094     138            lcall ?Set_Cursor_2 ; Select column and row
023A D0E0       138            pop acc
023C 74DF       139            mov a, #11011111b
023E 120212     140            lcall putchar   
0241            141   
0241 020244     142            ljmp Initial_menu       
0244            143   
0244            144   
0244            145   ;----------------Main Menu Logic----------------;
0244            146   
0244            147   
0244            148   Initial_menu: 
0244 C0E0       149            push acc
0246 7401       149            mov a, #1
0248 14         149            dec a
0249 120096     149            lcall ?Set_Cursor_1 ; Select column and row
024C D0E0       149            pop acc
024E C083       150            push dph
0250 C082       150            push dpl
0252 C0E0       150            push acc
0254 9000B1     150            mov dptr, #Welcome
0257 120089     150            lcall ?Send_Constant_String
025A D0E0       150            pop acc
025C D082       150            pop dpl
025E D083       150            pop dph
0260 C0E0       151            push acc
0262 7401       151            mov a, #1
0264 14         151            dec a
0265 120094     151            lcall ?Set_Cursor_2 ; Select column and row
0268 D0E0       151            pop acc
026A C083       152            push dph
026C C082       152            push dpl
026E C0E0       152            push acc
0270 9000C2     152            mov dptr, #Choose_option
0273 120089     152            lcall ?Send_Constant_String
0276 D0E0       152            pop acc
0278 D082       152            pop dpl
027A D083       152            pop dph
027C            153            
027C            154       ;------------- any button being pressed will change the screen
027C 208212     155   jb SELECT_BUTTON, endhere_13
027F C002       155            push AR2
0281 7A32       155            mov R2, #50
0283 12000E     155            lcall ?Wait_Milli_Seconds
0286 D002       155            pop AR2
0288 208206     155   jb SELECT_BUTTON, endhere_13
028B 3082FD     155   jnb SELECT_BUTTON, $
028E 020362     155   ljmp Choose_menu
0291            155   
0291            155   endhere_13:                      
0291 208312     156   jb NEXT_BUTTON, endhere_15
0294 C002       156            push AR2
0296 7A32       156            mov R2, #50
0298 12000E     156            lcall ?Wait_Milli_Seconds
029B D002       156            pop AR2
029D 208306     156   jb NEXT_BUTTON, endhere_15
02A0 3083FD     156   jnb NEXT_BUTTON, $
02A3 020362     156   ljmp Choose_menu
02A6            156   
02A6            156   endhere_15:                      
02A6 208012     157   jb UP_BUTTON, endhere_17
02A9 C002       157            push AR2
02AB 7A32       157            mov R2, #50
02AD 12000E     157            lcall ?Wait_Milli_Seconds
02B0 D002       157            pop AR2
02B2 208006     157   jb UP_BUTTON, endhere_17
02B5 3080FD     157   jnb UP_BUTTON, $
02B8 020362     157   ljmp Choose_menu
02BB            157   
02BB            157   endhere_17:                      
02BB 208112     158   jb DOWN_BUTTON, endhere_19
02BE C002       158            push AR2
02C0 7A32       158            mov R2, #50
02C2 12000E     158            lcall ?Wait_Milli_Seconds
02C5 D002       158            pop AR2
02C7 208106     158   jb DOWN_BUTTON, endhere_19
02CA 3081FD     158   jnb DOWN_BUTTON, $
02CD 020362     158   ljmp Choose_menu
02D0            158   
02D0            158   endhere_19:                      
02D0 020244     159       ljmp Initial_menu
02D3            160   
02D3            161   system_ready: 
02D3 C0E0       162            push acc
02D5 7401       162            mov a, #1
02D7 14         162            dec a
02D8 120096     162            lcall ?Set_Cursor_1 ; Select column and row
02DB D0E0       162            pop acc
02DD C083       163            push dph
02DF C082       163            push dpl
02E1 C0E0       163            push acc
02E3 90018E     163            mov dptr, #Is_ready
02E6 120089     163            lcall ?Send_Constant_String
02E9 D0E0       163            pop acc
02EB D082       163            pop dpl
02ED D083       163            pop dph
02EF C0E0       164            push acc
02F1 7401       164            mov a, #1
02F3 14         164            dec a
02F4 120094     164            lcall ?Set_Cursor_2 ; Select column and row
02F7 D0E0       164            pop acc
02F9 C083       165            push dph
02FB C082       165            push dpl
02FD C0E0       165            push acc
02FF 90019F     165            mov dptr, #Press_start
0302 120089     165            lcall ?Send_Constant_String
0305 D0E0       165            pop acc
0307 D082       165            pop dpl
0309 D083       165            pop dph
030B            165   
030B            166   
030B 208412     167   jb BACK_BUTTON, endhere_25
030E C002       167            push AR2
0310 7A32       167            mov R2, #50
0312 12000E     167            lcall ?Wait_Milli_Seconds
0315 D002       167            pop AR2
0317 208406     167   jb BACK_BUTTON, endhere_25
031A 3084FD     167   jnb BACK_BUTTON, $
031D 020362     167   ljmp Choose_menu
0320            167   
0320            167   endhere_25:                      
0320            168            
0320 208012     169   jb UP_BUTTON, endhere_27
0323 C002       169            push AR2
0325 7A32       169            mov R2, #50
0327 12000E     169            lcall ?Wait_Milli_Seconds
032A D002       169            pop AR2
032C 208006     169   jb UP_BUTTON, endhere_27
032F 3080FD     169   jnb UP_BUTTON, $
0332 020362     169   ljmp Choose_menu
0335            169   
0335            169   endhere_27:                      
0335            170   
0335 208112     171   jb DOWN_BUTTON, endhere_29
0338 C002       171            push AR2
033A 7A32       171            mov R2, #50
033C 12000E     171            lcall ?Wait_Milli_Seconds
033F D002       171            pop AR2
0341 208106     171   jb DOWN_BUTTON, endhere_29
0344 3081FD     171   jnb DOWN_BUTTON, $
0347 020362     171   ljmp Choose_menu
034A            171   
034A            171   endhere_29:                      
034A 208212     172   jb SELECT_BUTTON, endhere_31
034D C002       172            push AR2
034F 7A32       172            mov R2, #50
0351 12000E     172            lcall ?Wait_Milli_Seconds
0354 D002       172            pop AR2
0356 208206     172   jb SELECT_BUTTON, endhere_31
0359 3082FD     172   jnb SELECT_BUTTON, $
035C 020362     172   ljmp Choose_menu
035F            172   
035F            172   endhere_31:                      
035F            173   
035F 0202D3     174   ljmp system_ready
0362            175   
0362            176   
0362            177   Choose_menu: 
0362 C0E0       178            push acc
0364 7401       178            mov a, #1
0366 14         178            dec a
0367 120096     178            lcall ?Set_Cursor_1 ; Select column and row
036A D0E0       178            pop acc
036C C083       179            push dph
036E C082       179            push dpl
0370 C0E0       179            push acc
0372 9000D3     179            mov dptr, #Preset_menu_msg
0375 120089     179            lcall ?Send_Constant_String
0378 D0E0       179            pop acc
037A D082       179            pop dpl
037C D083       179            pop dph
037E C0E0       180            push acc
0380 7401       180            mov a, #1
0382 14         180            dec a
0383 120094     180            lcall ?Set_Cursor_2 ; Select column and row
0386 D0E0       180            pop acc
0388 C083       181            push dph
038A C082       181            push dpl
038C C0E0       181            push acc
038E 9000E4     181            mov dptr, #Custom_menu_msg
0391 120089     181            lcall ?Send_Constant_String
0394 D0E0       181            pop acc
0396 D082       181            pop dpl
0398 D083       181            pop dph
039A            182   
039A            183            ;!!!!need to have flashing cursor on screen on whichever option is selected !!!
039A 208012     184   jb UP_BUTTON, endhere_37
039D C002       184            push AR2
039F 7A32       184            mov R2, #50
03A1 12000E     184            lcall ?Wait_Milli_Seconds
03A4 D002       184            pop AR2
03A6 208006     184   jb UP_BUTTON, endhere_37
03A9 3080FD     184   jnb UP_BUTTON, $
03AC 0203C6     184   ljmp Preset_menu_select
03AF            184   
03AF            184   endhere_37:                      
03AF 208112     185   jb DOWN_BUTTON, endhere_39
03B2 C002       185            push AR2
03B4 7A32       185            mov R2, #50
03B6 12000E     185            lcall ?Wait_Milli_Seconds
03B9 D002       185            pop AR2
03BB 208106     185   jb DOWN_BUTTON, endhere_39
03BE 3081FD     185   jnb DOWN_BUTTON, $
03C1 02043F     185   ljmp Custom_menu_select
03C4            185   
03C4            185   endhere_39:                      
03C4            186            
03C4 809C       187            sjmp Choose_menu
03C6            188   
03C6            189   Preset_menu_select:
03C6            190            ;Remove messages when blinking cursor is set up
03C6 C0E0       191            push acc
03C8 7401       191            mov a, #1
03CA 14         191            dec a
03CB 120096     191            lcall ?Set_Cursor_1 ; Select column and row
03CE D0E0       191            pop acc
03D0 C083       192            push dph
03D2 C082       192            push dpl
03D4 C0E0       192            push acc
03D6 9001D2     192            mov dptr, #PRESETMENUMSG
03D9 120089     192            lcall ?Send_Constant_String
03DC D0E0       192            pop acc
03DE D082       192            pop dpl
03E0 D083       192            pop dph
03E2 C0E0       193            push acc
03E4 7401       193            mov a, #1
03E6 14         193            dec a
03E7 120094     193            lcall ?Set_Cursor_2 ; Select column and row
03EA D0E0       193            pop acc
03EC C083       194            push dph
03EE C082       194            push dpl
03F0 C0E0       194            push acc
03F2 9001C1     194            mov dptr, #Clear_Row
03F5 120089     194            lcall ?Send_Constant_String
03F8 D0E0       194            pop acc
03FA D082       194            pop dpl
03FC D083       194            pop dph
03FE            195            
03FE 208112     196   jb DOWN_BUTTON, endhere_45
0401 C002       196            push AR2
0403 7A32       196            mov R2, #50
0405 12000E     196            lcall ?Wait_Milli_Seconds
0408 D002       196            pop AR2
040A 208106     196   jb DOWN_BUTTON, endhere_45
040D 3081FD     196   jnb DOWN_BUTTON, $
0410 02043F     196   ljmp Custom_menu_select
0413            196   
0413            196   endhere_45:                      
0413 208212     197   jb SELECT_BUTTON, endhere_47
0416 C002       197            push AR2
0418 7A32       197            mov R2, #50
041A 12000E     197            lcall ?Wait_Milli_Seconds
041D D002       197            pop AR2
041F 208206     197   jb SELECT_BUTTON, endhere_47
0422 3082FD     197   jnb SELECT_BUTTON, $
0425 0204B8     197   ljmp Preset_menu
0428            197   
0428            197   endhere_47:                      
0428 208412     198   jb BACK_BUTTON, endhere_49
042B C002       198            push AR2
042D 7A32       198            mov R2, #50
042F 12000E     198            lcall ?Wait_Milli_Seconds
0432 D002       198            pop AR2
0434 208406     198   jb BACK_BUTTON, endhere_49
0437 3084FD     198   jnb BACK_BUTTON, $
043A 020362     198   ljmp Choose_menu
043D            198   
043D            198   endhere_49:                       ; have we determined if we are using a back button or a next button? What is the purpose of a next button? 
043D            199   
043D 8087       200            sjmp Preset_menu_select
043F            201   
043F            202   Custom_menu_select: 
043F            203            ;Remove messages when blinking cursor is set up
043F C0E0       204            push acc
0441 7401       204            mov a, #1
0443 14         204            dec a
0444 120096     204            lcall ?Set_Cursor_1 ; Select column and row
0447 D0E0       204            pop acc
0449 C083       205            push dph
044B C082       205            push dpl
044D C0E0       205            push acc
044F 9001E3     205            mov dptr, #CUSTOMMENUMSG
0452 120089     205            lcall ?Send_Constant_String
0455 D0E0       205            pop acc
0457 D082       205            pop dpl
0459 D083       205            pop dph
045B            205   
045B C0E0       206            push acc
045D 7401       206            mov a, #1
045F 14         206            dec a
0460 120094     206            lcall ?Set_Cursor_2 ; Select column and row
0463 D0E0       206            pop acc
0465 C083       207            push dph
0467 C082       207            push dpl
0469 C0E0       207            push acc
046B 9001C1     207            mov dptr, #Clear_Row
046E 120089     207            lcall ?Send_Constant_String
0471 D0E0       207            pop acc
0473 D082       207            pop dpl
0475 D083       207            pop dph
0477            208            
0477 208012     209   jb UP_BUTTON, endhere_55
047A C002       209            push AR2
047C 7A32       209            mov R2, #50
047E 12000E     209            lcall ?Wait_Milli_Seconds
0481 D002       209            pop AR2
0483 208006     209   jb UP_BUTTON, endhere_55
0486 3080FD     209   jnb UP_BUTTON, $
0489 0203C6     209   ljmp Preset_menu_select
048C            209   
048C            209   endhere_55:                      
048C 208212     210   jb SELECT_BUTTON, endhere_57
048F C002       210            push AR2
0491 7A32       210            mov R2, #50
0493 12000E     210            lcall ?Wait_Milli_Seconds
0496 D002       210            pop AR2
0498 208206     210   jb SELECT_BUTTON, endhere_57
049B 3082FD     210   jnb SELECT_BUTTON, $
049E 02068F     210   ljmp Custom_menu
04A1            210   
04A1            210   endhere_57:                      
04A1 208412     211   jb BACK_BUTTON, endhere_59
04A4 C002       211            push AR2
04A6 7A32       211            mov R2, #50
04A8 12000E     211            lcall ?Wait_Milli_Seconds
04AB D002       211            pop AR2
04AD 208406     211   jb BACK_BUTTON, endhere_59
04B0 3084FD     211   jnb BACK_BUTTON, $
04B3 020362     211   ljmp Choose_menu
04B6            211   
04B6            211   endhere_59:                      
04B6            212   
04B6 8087       213            sjmp Custom_menu_select
04B8            214   
04B8            215   ;------------------ Preset Menu END----------------------------------;
04B8            216   Preset_menu: 
04B8 C0E0       217            push acc
04BA 7401       217            mov a, #1
04BC 14         217            dec a
04BD 120096     217            lcall ?Set_Cursor_1 ; Select column and row
04C0 D0E0       217            pop acc
04C2 C083       218            push dph
04C4 C082       218            push dpl
04C6 C0E0       218            push acc
04C8 900139     218            mov dptr, #Pb_free_solder
04CB 120089     218            lcall ?Send_Constant_String
04CE D0E0       218            pop acc
04D0 D082       218            pop dpl
04D2 D083       218            pop dph
04D4 C0E0       219            push acc
04D6 7401       219            mov a, #1
04D8 14         219            dec a
04D9 120094     219            lcall ?Set_Cursor_2 ; Select column and row
04DC D0E0       219            pop acc
04DE C083       220            push dph
04E0 C082       220            push dpl
04E2 C0E0       220            push acc
04E4 90014A     220            mov dptr, #Pb_solder
04E7 120089     220            lcall ?Send_Constant_String
04EA D0E0       220            pop acc
04EC D082       220            pop dpl
04EE D083       220            pop dph
04F0            221   
04F0            222   
04F0 208012     223   jb UP_BUTTON, endhere_65
04F3 C002       223            push AR2
04F5 7A32       223            mov R2, #50
04F7 12000E     223            lcall ?Wait_Milli_Seconds
04FA D002       223            pop AR2
04FC 208006     223   jb UP_BUTTON, endhere_65
04FF 3080FD     223   jnb UP_BUTTON, $
0502 020532     223   ljmp pb_free_select
0505            223   
0505            223   endhere_65:                      
0505 208112     224   jb DOWN_BUTTON, endhere_67
0508 C002       224            push AR2
050A 7A32       224            mov R2, #50
050C 12000E     224            lcall ?Wait_Milli_Seconds
050F D002       224            pop AR2
0511 208106     224   jb DOWN_BUTTON, endhere_67
0514 3081FD     224   jnb DOWN_BUTTON, $
0517 020573     224   ljmp pb_select
051A            224   
051A            224   endhere_67:                      
051A 208412     225   jb BACK_BUTTON, endhere_69
051D C002       225            push AR2
051F 7A32       225            mov R2, #50
0521 12000E     225            lcall ?Wait_Milli_Seconds
0524 D002       225            pop AR2
0526 208406     225   jb BACK_BUTTON, endhere_69
0529 3084FD     225   jnb BACK_BUTTON, $
052C 020362     225   ljmp Choose_menu
052F            225   
052F            225   endhere_69:                      
052F            226   
052F 0204B8     227            ljmp Preset_menu
0532            228   
0532            229   pb_free_select: 
0532 208112     230   jb DOWN_BUTTON, endhere_71
0535 C002       230            push AR2
0537 7A32       230            mov R2, #50
0539 12000E     230            lcall ?Wait_Milli_Seconds
053C D002       230            pop AR2
053E 208106     230   jb DOWN_BUTTON, endhere_71
0541 3081FD     230   jnb DOWN_BUTTON, $
0544 020573     230   ljmp pb_select
0547            230   
0547            230   endhere_71:                      
0547 208212     231   jb SELECT_BUTTON, endhere_73
054A C002       231            push AR2
054C 7A32       231            mov R2, #50
054E 12000E     231            lcall ?Wait_Milli_Seconds
0551 D002       231            pop AR2
0553 208206     231   jb SELECT_BUTTON, endhere_73
0556 3082FD     231   jnb SELECT_BUTTON, $
0559 0205FB     231   ljmp pb_free_solder_set
055C            231   
055C            231   endhere_73:                      
055C 208412     232   jb BACK_BUTTON, endhere_75
055F C002       232            push AR2
0561 7A32       232            mov R2, #50
0563 12000E     232            lcall ?Wait_Milli_Seconds
0566 D002       232            pop AR2
0568 208406     232   jb BACK_BUTTON, endhere_75
056B 3084FD     232   jnb BACK_BUTTON, $
056E 020362     232   ljmp Choose_menu
0571            232   
0571            232   endhere_75:                      
0571            233   
0571 80BF       234            sjmp pb_free_select
0573            235   
0573            236   pb_select: 
0573 208012     237   jb UP_BUTTON, endhere_77
0576 C002       237            push AR2
0578 7A32       237            mov R2, #50
057A 12000E     237            lcall ?Wait_Milli_Seconds
057D D002       237            pop AR2
057F 208006     237   jb UP_BUTTON, endhere_77
0582 3080FD     237   jnb UP_BUTTON, $
0585 020532     237   ljmp pb_free_select
0588            237   
0588            237   endhere_77:                      
0588 208212     238   jb SELECT_BUTTON, endhere_79
058B C002       238            push AR2
058D 7A32       238            mov R2, #50
058F 12000E     238            lcall ?Wait_Milli_Seconds
0592 D002       238            pop AR2
0594 208206     238   jb SELECT_BUTTON, endhere_79
0597 3082FD     238   jnb SELECT_BUTTON, $
059A 0205B4     238   ljmp pb_solder_set
059D            238   
059D            238   endhere_79:                      
059D 208412     239   jb BACK_BUTTON, endhere_81
05A0 C002       239            push AR2
05A2 7A32       239            mov R2, #50
05A4 12000E     239            lcall ?Wait_Milli_Seconds
05A7 D002       239            pop AR2
05A9 208406     239   jb BACK_BUTTON, endhere_81
05AC 3084FD     239   jnb BACK_BUTTON, $
05AF 020362     239   ljmp Choose_menu
05B2            239   
05B2            239   endhere_81:                      
05B2            240   
05B2 80BF       241            sjmp pb_select
05B4            242   
05B4            243   
05B4            244   pb_solder_set:           ; for soldering with the Sn63Pb37 alloy         
05B4 C0E0       245            push acc
05B6 7401       245            mov a, #1
05B8 14         245            dec a
05B9 120096     245            lcall ?Set_Cursor_1 ; Select column and row
05BC D0E0       245            pop acc
05BE C083       246            push dph
05C0 C082       246            push dpl
05C2 C0E0       246            push acc
05C4 90014A     246            mov dptr, #Pb_solder
05C7 120089     246            lcall ?Send_Constant_String
05CA D0E0       246            pop acc
05CC D082       246            pop dpl
05CE D083       246            pop dph
05D0 C0E0       247            push acc
05D2 7401       247            mov a, #1
05D4 14         247            dec a
05D5 120094     247            lcall ?Set_Cursor_2 ; Select column and row
05D8 D0E0       247            pop acc
05DA C083       248            push dph
05DC C082       248            push dpl
05DE C0E0       248            push acc
05E0 90017D     248            mov dptr, #Profile_loaded
05E3 120089     248            lcall ?Send_Constant_String
05E6 D0E0       248            pop acc
05E8 D082       248            pop dpl
05EA D083       248            pop dph
05EC            249            ;mov a, #120
05EC            250            ;da a 
05EC 754178     251            mov soaktime, #120
05EF            252   ;        mov a, #150
05EF            253            ;da a
05EF 754396     254            mov soaktemp, #150
05F2 754514     255            mov reflowtime, #20
05F5 7547E6     256            mov reflowtemp, #230
05F8            257   
05F8 0202D3     258            ljmp system_ready
05FB            259   
05FB            260   pb_free_solder_set:      ;for soldering SAC305 lead-free solder 
05FB C0E0       261            push acc
05FD 7401       261            mov a, #1
05FF 14         261            dec a
0600 120096     261            lcall ?Set_Cursor_1 ; Select column and row
0603 D0E0       261            pop acc
0605 C083       262            push dph
0607 C082       262            push dpl
0609 C0E0       262            push acc
060B 900139     262            mov dptr, #Pb_free_solder
060E 120089     262            lcall ?Send_Constant_String
0611 D0E0       262            pop acc
0613 D082       262            pop dpl
0615 D083       262            pop dph
0617 C0E0       263            push acc
0619 7401       263            mov a, #1
061B 14         263            dec a
061C 120094     263            lcall ?Set_Cursor_2 ; Select column and row
061F D0E0       263            pop acc
0621 C083       264            push dph
0623 C082       264            push dpl
0625 C0E0       264            push acc
0627 90017D     264            mov dptr, #Profile_loaded
062A 120089     264            lcall ?Send_Constant_String
062D D0E0       264            pop acc
062F D082       264            pop dpl
0631 D083       264            pop dph
0633            265            
0633            266   ;        mov a, #120
0633            267   ;        da a
0633 754178     268            mov soaktime, #120
0636            269            
0636            270   ;        mov a, #160
0636            271   ;        da a
0636 7543A0     272            mov soaktemp, #160
0639 740F       273            mov a, #15
063B            274   ;        da a
063B F545       275            mov reflowtime, a
063D            276            
063D 74F5       277            mov a, #245
063F            278   ;        da a
063F F547       279            mov reflowtemp, a
0641 0202D3     280            ljmp system_ready
0644            281   
0644            282   Pb_free_secret_pizza:                            ; can we include this as a joke/bonus pls???
0644 C0E0       283            push acc
0646 7401       283            mov a, #1
0648 14         283            dec a
0649 120096     283            lcall ?Set_Cursor_1 ; Select column and row
064C D0E0       283            pop acc
064E C083       284            push dph
0650 C082       284            push dpl
0652 C0E0       284            push acc
0654 90015B     284            mov dptr, #Pizza_msg0
0657 120089     284            lcall ?Send_Constant_String
065A D0E0       284            pop acc
065C D082       284            pop dpl
065E D083       284            pop dph
0660 C0E0       285            push acc
0662 7401       285            mov a, #1
0664 14         285            dec a
0665 120094     285            lcall ?Set_Cursor_2 ; Select column and row
0668 D0E0       285            pop acc
066A C083       286            push dph
066C C082       286            push dpl
066E C0E0       286            push acc
0670 90016C     286            mov dptr, #Pizza_msg1
0673 120089     286            lcall ?Send_Constant_String
0676 D0E0       286            pop acc
0678 D082       286            pop dpl
067A D083       286            pop dph
067C            287   
067C 741E       288            mov a, #30
067E            289   ;        da a
067E F541       290            mov soaktime, a
0680 74C8       291            mov a, #200
0682            292   ;        da a
0682 F543       293            mov soaktemp, a
0684            294            
0684 7414       295            mov a , #20
0686            296   ;        da a
0686 F545       297            mov reflowtime, a
0688 74F5       298            mov a, #245
068A            299   ;        da a
068A F547       300            mov reflowtemp, a
068C            301   
068C 0202D3     302            ljmp system_ready
068F            303            
068F            304   ;------------------ Preset Menu END----------------------------------;   
068F            305   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
068F            306   ;;;                      Custom Menu Begin
068F            307   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
068F            308   Custom_menu: 
068F C0E0       309            push acc
0691 7401       309            mov a, #1
0693 14         309            dec a
0694 120096     309            lcall ?Set_Cursor_1 ; Select column and row
0697 D0E0       309            pop acc
0699 C083       310            push dph
069B C082       310            push dpl
069D C0E0       310            push acc
069F 9000E4     310            mov dptr, #Custom_menu_msg
06A2 120089     310            lcall ?Send_Constant_String
06A5 D0E0       310            pop acc
06A7 D082       310            pop dpl
06A9 D083       310            pop dph
06AB C0E0       311            push acc
06AD 7401       311            mov a, #1
06AF 14         311            dec a
06B0 120094     311            lcall ?Set_Cursor_2 ; Select column and row
06B3 D0E0       311            pop acc
06B5 C083       312            push dph
06B7 C082       312            push dpl
06B9 C0E0       312            push acc
06BB 9001C1     312            mov dptr, #Clear_Row
06BE 120089     312            lcall ?Send_Constant_String
06C1 D0E0       312            pop acc
06C3 D082       312            pop dpl
06C5 D083       312            pop dph
06C7            313            ;Wait until select button is pressed then loop to options
06C7            314            ;button_jmp(SELECT_BUTTON, Forever_loop)
06C7            315            ;jb SELECT_BUTTON, Forever_loop
06C7            316            ;Wait_Milli_Seconds(#50)
06C7            317            ;jb SELECT_BUTTON, Forever_loop
06C7            318            ;jnb SELECT_BUTTON, $
06C7 208212     319   jb SELECT_BUTTON, endhere_99
06CA C002       319            push AR2
06CC 7A32       319            mov R2, #50
06CE 12000E     319            lcall ?Wait_Milli_Seconds
06D1 D002       319            pop AR2
06D3 208206     319   jb SELECT_BUTTON, endhere_99
06D6 3082FD     319   jnb SELECT_BUTTON, $
06D9 0206E6     319   ljmp Set_Soak_temp
06DC            319   
06DC            319   endhere_99:                      
06DC 8000       320            sjmp Forever_loop
06DE            321            ;ljmp Set_Soak_temp
06DE            322            
06DE            323   Forever_loop:
06DE 308402     324            jnb BACK_BUTTON, Custom_to_Choose_menu
06E1 80AC       325            sjmp Custom_menu        
06E3            326   Custom_to_Choose_menu:
06E3 020362     327            ljmp Choose_menu
06E6            328   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
06E6            329   ;;;                      Set Soak Temp
06E6            330   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         
06E6            331   Set_Soak_temp:   
06E6 C0E0       332            push acc
06E8 7401       332            mov a, #1
06EA 14         332            dec a
06EB 120096     332            lcall ?Set_Cursor_1 ; Select column and row
06EE D0E0       332            pop acc
06F0 C083       333            push dph
06F2 C082       333            push dpl
06F4 C0E0       333            push acc
06F6 9000F5     333            mov dptr, #Soak_temp
06F9 120089     333            lcall ?Send_Constant_String
06FC D0E0       333            pop acc
06FE D082       333            pop dpl
0700 D083       333            pop dph
0702 C0E0       334            push acc
0704 7401       334            mov a, #1
0706 14         334            dec a
0707 120094     334            lcall ?Set_Cursor_2 ; Select column and row
070A D0E0       334            pop acc
070C C000       335            push ar0
070E A843       335            mov r0, soaktemp
0710 12009B     335            lcall ?Display_BCD
0713 D000       335            pop ar0
0715            336            ;if up/down buttons pressed branch and inc/dec params
0715 208023     337            jb UP_BUTTON, Decrease_soaktemp
0718 C002       338            push AR2
071A 7A32       338            mov R2, #50
071C 12000E     338            lcall ?Wait_Milli_Seconds
071F D002       338            pop AR2
0721 208017     339            jb UP_BUTTON, Decrease_soaktemp
0724 3080FD     340            jnb UP_BUTTON, $
0727 E543       341            mov a, soaktemp
0729 2401       342            add a, #0x01
072B D4         343            da a
072C B49906     344            cjne a, #0x99, Increase_soaktemp_loop
072F E4         345            clr a 
0730 F543       346            mov soaktemp, a
0732 0206E6     347            ljmp Set_Soak_temp
0735            348            
0735            349   Increase_soaktemp_loop:
0735 F543       350            mov soaktemp, a
0737 E4         351            clr a   
0738 0206E6     352            ljmp Set_Soak_temp      
073B            353            
073B            354   Decrease_soaktemp:
073B 208123     355            jb DOWN_BUTTON, Nextmenu1
073E C002       356            push AR2
0740 7A32       356            mov R2, #50
0742 12000E     356            lcall ?Wait_Milli_Seconds
0745 D002       356            pop AR2
0747 208117     357            jb DOWN_BUTTON, Nextmenu1
074A 3081FD     358            jnb DOWN_BUTTON, $      
074D E543       359            mov a, soaktemp
074F 2499       360            add a, #0x99
0751 D4         361            da a
0752 B40006     362            cjne a, #0x00, Decrease_soaktemp_loop
0755 E4         363            clr a 
0756 F543       364            mov soaktemp, a
0758 0206E6     365            ljmp Set_Soak_temp
075B            366            
075B            367   Decrease_soaktemp_loop:
075B F543       368            mov soaktemp, a
075D E4         369            clr a   
075E 0206E6     370            ljmp Set_Soak_temp      
0761            371   Nextmenu1:
0761 308303     372            jnb NEXT_BUTTON, Set_Soak_time
0764 0206E6     373            ljmp Set_Soak_temp      
0767            374   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0767            375   ;;;                      Set Soak Time
0767            376   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0767            377   Set_Soak_time:
0767 3083FD     378            jnb NEXT_BUTTON, $
076A C0E0       379            push acc
076C 7401       379            mov a, #1
076E 14         379            dec a
076F 120096     379            lcall ?Set_Cursor_1 ; Select column and row
0772 D0E0       379            pop acc
0774 C083       380            push dph
0776 C082       380            push dpl
0778 C0E0       380            push acc
077A 900106     380            mov dptr, #Soak_time
077D 120089     380            lcall ?Send_Constant_String
0780 D0E0       380            pop acc
0782 D082       380            pop dpl
0784 D083       380            pop dph
0786 C0E0       381            push acc
0788 7401       381            mov a, #1
078A 14         381            dec a
078B 120094     381            lcall ?Set_Cursor_2 ; Select column and row
078E D0E0       381            pop acc
0790 C000       382            push ar0
0792 A841       382            mov r0, soaktime
0794 12009B     382            lcall ?Display_BCD
0797 D000       382            pop ar0
0799            383            ;Button_jmp(UP_BUTTON,Decrease_soaktime)
0799            384            ;if up/down buttons pressed branch and inc/dec params
0799 208023     385            jb UP_BUTTON, Decrease_soaktime
079C C002       386            push AR2
079E 7A32       386            mov R2, #50
07A0 12000E     386            lcall ?Wait_Milli_Seconds
07A3 D002       386            pop AR2
07A5 208017     387            jb UP_BUTTON, Decrease_soaktime
07A8 3080FD     388            jnb UP_BUTTON, $
07AB E541       389            mov a, soaktime
07AD 2401       390            add a, #0x01
07AF D4         391            da a
07B0 B49906     392            cjne a, #0x99, Increase_soaktime_loop
07B3 E4         393            clr a 
07B4 F541       394            mov soaktime, a
07B6 020767     395            ljmp Set_Soak_time
07B9            396            
07B9            397   Increase_soaktime_loop:
07B9 F541       398            mov soaktime, a
07BB E4         399            clr a   
07BC 020767     400            ljmp Set_Soak_time      
07BF            401            
07BF            402   Decrease_soaktime:
07BF 208123     403            jb DOWN_BUTTON, Nextmenu2
07C2 C002       404            push AR2
07C4 7A32       404            mov R2, #50
07C6 12000E     404            lcall ?Wait_Milli_Seconds
07C9 D002       404            pop AR2
07CB 208117     405            jb DOWN_BUTTON, Nextmenu2
07CE 3081FD     406            jnb DOWN_BUTTON, $      
07D1 E541       407            mov a, soaktime
07D3 2499       408            add a, #0x99
07D5 D4         409            da a
07D6 B40006     410            cjne a, #0x00, Decrease_soaktime_loop
07D9 E4         411            clr a 
07DA F541       412            mov soaktime, a
07DC 020767     413            ljmp Set_Soak_time
07DF            414            
07DF            415   Decrease_soaktime_loop:
07DF F541       416            mov soaktime, a
07E1 E4         417            clr a   
07E2 020767     418            ljmp Set_Soak_time      
07E5            419   Nextmenu2:
07E5 308303     420            jnb NEXT_BUTTON, Set_Reflow_temp 
07E8 020767     421            ljmp Set_Soak_time
07EB            422   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
07EB            423   ;;;                      Set Reflow Temp
07EB            424   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
07EB            425   Set_Reflow_temp:
07EB 3083FD     426            jnb NEXT_BUTTON, $
07EE C0E0       427            push acc
07F0 7401       427            mov a, #1
07F2 14         427            dec a
07F3 120096     427            lcall ?Set_Cursor_1 ; Select column and row
07F6 D0E0       427            pop acc
07F8 C083       428            push dph
07FA C082       428            push dpl
07FC C0E0       428            push acc
07FE 900128     428            mov dptr, #Reflow_temp
0801 120089     428            lcall ?Send_Constant_String
0804 D0E0       428            pop acc
0806 D082       428            pop dpl
0808 D083       428            pop dph
080A C0E0       429            push acc
080C 7401       429            mov a, #1
080E 14         429            dec a
080F 120094     429            lcall ?Set_Cursor_2 ; Select column and row
0812 D0E0       429            pop acc
0814            429   
0814 C000       430            push ar0
0816 A847       430            mov r0, reflowtemp
0818 12009B     430            lcall ?Display_BCD
081B D000       430            pop ar0
081D            431            ;if up/down buttons pressed branch and inc/dec params
081D 208023     432            jb UP_BUTTON, Decrease_reflowtemp
0820 C002       433            push AR2
0822 7A32       433            mov R2, #50
0824 12000E     433            lcall ?Wait_Milli_Seconds
0827 D002       433            pop AR2
0829 208017     434            jb UP_BUTTON, Decrease_reflowtemp
082C 3080FD     435            jnb UP_BUTTON, $
082F E547       436            mov a, reflowtemp
0831 2401       437            add a, #0x01
0833 D4         438            da a
0834 B49906     439            cjne a, #0x99, Increase_reflowtemp_loop
0837 E4         440            clr a 
0838 F547       441            mov reflowtemp, a
083A 0207EB     442            ljmp Set_Reflow_temp
083D            443            
083D            444   Increase_reflowtemp_loop:
083D F547       445            mov reflowtemp, a
083F E4         446            clr a   
0840 0207EB     447            ljmp Set_Reflow_temp    
0843            448            
0843            449   Decrease_reflowtemp:
0843 208123     450            jb DOWN_BUTTON, Nextmenu3
0846 C002       451            push AR2
0848 7A32       451            mov R2, #50
084A 12000E     451            lcall ?Wait_Milli_Seconds
084D D002       451            pop AR2
084F 208117     452            jb DOWN_BUTTON, Nextmenu3
0852 3081FD     453            jnb DOWN_BUTTON, $      
0855 E547       454            mov a, reflowtemp
0857 2499       455            add a, #0x99
0859 D4         456            da a
085A B40006     457            cjne a, #0x00, Decrease_reflowtemp_loop
085D E4         458            clr a 
085E F547       459            mov reflowtemp, a
0860 0207EB     460            ljmp Set_Reflow_temp
0863            461            
0863            462   Decrease_reflowtemp_loop:
0863 F547       463            mov reflowtemp, a
0865 E4         464            clr a   
0866 0207EB     465            ljmp Set_Reflow_temp    
0869            466   Nextmenu3:
0869 308303     467            jnb NEXT_BUTTON, Set_Reflow_time 
086C 0207EB     468            ljmp Set_Reflow_temp
086F            469   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
086F            470   ;;;                      Set Reflow Time
086F            471   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         
086F            472   Set_Reflow_time:
086F 3083FD     473            jnb NEXT_BUTTON, $
0872 C0E0       474            push acc
0874 7401       474            mov a, #1
0876 14         474            dec a
0877 120096     474            lcall ?Set_Cursor_1 ; Select column and row
087A D0E0       474            pop acc
087C C083       475            push dph
087E C082       475            push dpl
0880 C0E0       475            push acc
0882 900117     475            mov dptr, #Reflow_time
0885 120089     475            lcall ?Send_Constant_String
0888 D0E0       475            pop acc
088A D082       475            pop dpl
088C D083       475            pop dph
088E C0E0       476            push acc
0890 7401       476            mov a, #1
0892 14         476            dec a
0893 120094     476            lcall ?Set_Cursor_2 ; Select column and row
0896 D0E0       476            pop acc
0898            476   
0898 C000       477            push ar0
089A A845       477            mov r0, reflowtime
089C 12009B     477            lcall ?Display_BCD
089F D000       477            pop ar0
08A1            478            ;if up/down buttons pressed branch and inc/dec params
08A1 208023     479            jb UP_BUTTON, Decrease_reflowtime
08A4 C002       480            push AR2
08A6 7A32       480            mov R2, #50
08A8 12000E     480            lcall ?Wait_Milli_Seconds
08AB D002       480            pop AR2
08AD 208017     481            jb UP_BUTTON, Decrease_reflowtime
08B0 3080FD     482            jnb UP_BUTTON, $
08B3 E545       483            mov a, reflowtime
08B5 2401       484            add a, #0x01
08B7 D4         485            da a
08B8 B49906     486            cjne a, #0x99, Increase_reflowtime_loop
08BB E4         487            clr a 
08BC F545       488            mov reflowtime, a
08BE 02086F     489            ljmp Set_Reflow_time
08C1            490            
08C1            491   Increase_reflowtime_loop:
08C1 F545       492            mov reflowtime, a
08C3 E4         493            clr a   
08C4 02086F     494            ljmp Set_Reflow_time
08C7            495            
08C7            496   Decrease_reflowtime:
08C7 208123     497            jb DOWN_BUTTON, Nextmenu4
08CA C002       498            push AR2
08CC 7A32       498            mov R2, #50
08CE 12000E     498            lcall ?Wait_Milli_Seconds
08D1 D002       498            pop AR2
08D3 208117     499            jb DOWN_BUTTON, Nextmenu4
08D6 3081FD     500            jnb DOWN_BUTTON, $      
08D9 E545       501            mov a, reflowtime
08DB 2499       502            add a, #0x99
08DD D4         503            da a
08DE B40006     504            cjne a, #0x00, Decrease_reflowtime_loop
08E1 E4         505            clr a 
08E2 F545       506            mov reflowtime, a
08E4 02086F     507            ljmp Set_Reflow_time
08E7            508            
08E7            509   Decrease_reflowtime_loop:
08E7 F545       510            mov reflowtime, a
08E9 E4         511            clr a   
08EA 02086F     512            ljmp Set_Reflow_time
08ED            513   Nextmenu4:
08ED 308303     514            jnb NEXT_BUTTON, Custom_menu_loopback
08F0 02086F     515            ljmp Set_Reflow_time
08F3            516            
08F3            517   Custom_menu_loopback:
08F3 C0E0       518            push acc
08F5 7401       518            mov a, #1
08F7 14         518            dec a
08F8 120096     518            lcall ?Set_Cursor_1 ; Select column and row
08FB D0E0       518            pop acc
08FD C083       519            push dph
08FF C082       519            push dpl
0901 C0E0       519            push acc
0903 9001F4     519            mov dptr, #Are_you_sure
0906 120089     519            lcall ?Send_Constant_String
0909 D0E0       519            pop acc
090B D082       519            pop dpl
090D D083       519            pop dph
090F C0E0       520            push acc
0911 7401       520            mov a, #1
0913 14         520            dec a
0914 120094     520            lcall ?Set_Cursor_2 ; Select column and row
0917 D0E0       520            pop acc
0919 C083       521            push dph
091B C082       521            push dpl
091D C0E0       521            push acc
091F 9001C1     521            mov dptr, #Clear_Row
0922 120089     521            lcall ?Send_Constant_String
0925 D0E0       521            pop acc
0927 D082       521            pop dpl
0929 D083       521            pop dph
092B 308003     522            jnb UP_BUTTON, lllaaa
092E 0208F3     523            ljmp Custom_menu_loopback
0931            524   lllaaa:
0931 02068F     525            ljmp Custom_menu
0934            526   ;----------------Custom Menu End----------------;
0934            527   
0934            528   
0934            529            
0934            530   En
